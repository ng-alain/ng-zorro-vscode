export const enUS: Record<string, string> = {
  "nz-row.title": "Grid",
  "nz-row.whenToUse": "",
  "nz-row.description": "",
  "nz-row.nzAlign.description": "the vertical alignment",
  "nz-row.nzGutter.description": "spacing between grids, could be a number or a object like `{ xs: 8, sm: 16, md: 24}`. or you can use array to make horizontal and vertical spacing work at the same time `[horizontal, vertical]`",
  "nz-row.nzJustify.description": "horizontal arrangement",
  "nz-col.title": "Grid",
  "nz-col.whenToUse": "",
  "nz-col.description": "",
  "nz-col.nzFlex.description": "flex layout style",
  "nz-col.nzOffset.description": "the number of cells to offset Col from the left",
  "nz-col.nzOrder.description": "raster order",
  "nz-col.nzPull.description": "the number of cells that raster is moved to the left",
  "nz-col.nzPush.description": "the number of cells that raster is moved to the right",
  "nz-col.nzSpan.description": "raster number of cells to occupy, 0 corresponds to `display: none`",
  "nz-col.nzXs.description": "`<576px` and also default setting, could be a `span` value or an object containing above props",
  "nz-col.nzSm.description": "`≥576px`, could be a `span` value or an object containing above props",
  "nz-col.nzMd.description": "`≥768px`, could be a `span` value or an object containing above props",
  "nz-col.nzLg.description": "`≥992px`, could be a `span` value or an object containing above props",
  "nz-col.nzXl.description": "`≥1200px`, could be a `span` value or an object containing above props",
  "nz-col.nzXXl.description": "`≥1600px`, could be a `span` value or an object containing above props",
  "nz-tooltip.title": "Tooltip",
  "nz-tooltip.whenToUse": "- The Tooltip doesn't support complex text or operations. The tip is shown on mouse enter and is hidden on mouse leave.\n- To provide an explanation fo a `button/text/operation`. It's often used instead of the HTML `title` attribute to explain `button/text/operation`.",
  "nz-tooltip.description": "",
  "nz-tooltip.nzTooltipArrowPointAtCenter.description": "Arrow point at center of the origin",
  "nz-tooltip.nzTooltipTitle.description": "The text shown in the tooltip",
  "nz-tooltip.nzTooltipTitleContext.description": "The context of tooltip title",
  "nz-tooltip.nzTooltipTrigger.description": "Tooltip trigger mode. If set to `null` it would not be triggered",
  "nz-tooltip.nzTooltipPlacement.description": "The position of the tooltip relative to the target",
  "nz-tooltip.nzTooltipColor.description": "The background color",
  "nz-tooltip.nzTooltipOrigin.description": "Origin of the tooltip",
  "nz-tooltip.nzTooltipVisible.description": "Show or hide tooltip",
  "nz-tooltip.nzTooltipVisibleChange.description": "Callback of hide or show",
  "nz-tooltip.nzTooltipMouseEnterDelay.description": "Delay in seconds, before tooltip is shown on mouse enter",
  "nz-tooltip.nzTooltipMouseLeaveDelay.description": "Delay in seconds, before tooltip is hidden on mouse leave",
  "nz-tooltip.nzTooltipOverlayClassName.description": "Class name of the tooltip card",
  "nz-tooltip.nzTooltipOverlayStyle.description": "Style of the tooltip card",
  "nz-affix.title": "Affix",
  "nz-affix.whenToUse": "When user browses a long web page, some content need to stick to the viewport. This is common for menus and actions.",
  "nz-affix.description": "",
  "nz-affix.nzOffsetBottom.description": "Pixels to offset from bottom when calculating position of scroll",
  "nz-affix.nzOffsetTop.description": "Pixels to offset from top when calculating position of scroll",
  "nz-affix.nzTarget.description": "specifies the scrollable area dom node",
  "nz-affix.nzChange.description": "Callback for when affix state is changed",
  "nz-alert.title": "Alert",
  "nz-alert.whenToUse": "- When you need to show alert messages to users.\n- When you need a persistent static container which is closable by user actions.",
  "nz-alert.description": "",
  "nz-alert.nzBanner.description": "Whether to show as banner",
  "nz-alert.nzAction.description": "Customized alert's action",
  "nz-alert.nzCloseable.description": "Whether Alert can be closed",
  "nz-alert.nzCloseText.description": "Close text to show",
  "nz-alert.nzDescription.description": "Additional content of Alert",
  "nz-alert.nzMessage.description": "Content of Alert",
  "nz-alert.nzShowIcon.description": "Whether to show icon, in `nzBanner` mode default is `true`",
  "nz-alert.nzIconType.description": "Icon type, effective when `nzShowIcon` is `true`",
  "nz-alert.nzType.description": "Type of Alert styles, in `nzBanner` mode default is `'warning'`",
  "nz-alert.nzIcon.description": "Custom icon, effective when showIcon is true",
  "nz-alert.nzOnClose.description": "Callback when Alert is closed",
  "nz-anchor.title": "Anchor",
  "nz-anchor.whenToUse": "For displaying anchor hyperlinks on page and jumping between them.",
  "nz-anchor.description": "",
  "nz-anchor.nzAffix.description": "Fixed mode of Anchor",
  "nz-anchor.nzBounds.description": "Bounding distance of anchor area, unit: px",
  "nz-anchor.nzOffsetTop.description": "Pixels to offset from top when calculating position of scroll",
  "nz-anchor.nzShowInkInFixed.description": "Whether show ink-balls in fixed mode",
  "nz-anchor.nzTargetOffset.description": "Anchor scroll offset, default as `offsetTop`",
  "nz-anchor.nzContainer.description": "Scrolling container",
  "nz-anchor.nzCurrentAnchor.description": "Customize the anchor highlight",
  "nz-anchor.nzDirection.description": "Set Anchor direction",
  "nz-anchor.nzClick.description": "Click of Anchor item",
  "nz-anchor.nzChange.description": "Listening for anchor link change",
  "nz-anchor.nzScroll.description": "The scroll function that is triggered when scrolling to an anchor.",
  "nz-link.title": "Anchor",
  "nz-link.whenToUse": "For displaying anchor hyperlinks on page and jumping between them.",
  "nz-link.description": "",
  "nzAutocomplete.title": "AutoComplete",
  "nzAutocomplete.whenToUse": "When there is a need for autocomplete functionality.",
  "nzAutocomplete.description": "",
  "nzAutocomplete.nzAutocomplete.description": "used to bind `nzAutocomplete` components",
  "nz-autocomplete.title": "AutoComplete",
  "nz-autocomplete.whenToUse": "When there is a need for autocomplete functionality.",
  "nz-autocomplete.description": "",
  "nz-autocomplete.nzBackfill.description": "backfill selected item the input when using keyboard",
  "nz-autocomplete.nzDataSource.description": "Data source for autocomplete",
  "nz-autocomplete.nzDefaultActiveFirstOption.description": "Whether active first option by default",
  "nz-autocomplete.nzWidth.description": "Custom width, unit px",
  "nz-autocomplete.nzOverlayClassName.description": "Class name of the dropdown root element",
  "nz-autocomplete.nzOverlayStyle.description": "Style of the dropdown root element",
  "nz-autocomplete.compareWith.description": "Same as [SelectControlValueAccessor](https://angular.dev/api/forms/SelectControlValueAccessor)",
  "nz-auto-option.title": "AutoComplete",
  "nz-auto-option.whenToUse": "When there is a need for autocomplete functionality.",
  "nz-auto-option.description": "",
  "nz-auto-option.nzValue.description": "bind ngModel of the trigger element",
  "nz-auto-option.nzLabel.description": "display value of the trigger element",
  "nz-auto-option.nzDisabled.description": "disabled option",
  "nz-avatar.title": "Avatar",
  "nz-avatar.whenToUse": "",
  "nz-avatar.description": "",
  "nz-avatar.nzIcon.description": "The `Icon` type for an icon avatar, see `Icon`",
  "nz-avatar.nzShape.description": "The shape of avatar",
  "nz-avatar.nzSize.description": "The size of the avatar",
  "nz-avatar.nzGap.description": "Letter type unit distance between left and right sides",
  "nz-avatar.nzSrc.description": "Avatar image URL",
  "nz-avatar.nzSrcSet.description": "a list of sources to use for different screen resolutions",
  "nz-avatar.nzAlt.description": "This attribute defines the alternative text describing the image",
  "nz-avatar.nzText.description": "Letter type avatar",
  "nz-avatar.nzLoading.description": "Sets the native [`loading`](https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/img#loading) attribute on the avatar image element",
  "nz-avatar.nzFetchPriority.description": "Sets the native [`fetchpriority`](https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/img#fetchpriority) attribute on the avatar image element",
  "nz-avatar.nzError.description": "Handler when img load error, call the `preventDefault` method to prevent default fallback behavior",
  "nz-avatar-group.title": "Avatar",
  "nz-avatar-group.whenToUse": "",
  "nz-avatar-group.description": "",
  "nz-back-top.title": "BackTop",
  "nz-back-top.whenToUse": "- When the page content is very long.\n- When you need to go back to the top very frequently in order to view the contents.",
  "nz-back-top.description": "The distance to the bottom is set to `50px` by default, which is overridable.\nIf you decide to use custom styles, please note the size limit: no more than `40px * 40px`.",
  "nz-back-top.nzTemplate.description": "custom content",
  "nz-back-top.nzVisibilityHeight.description": "the `nz-back-top` button will not show until the scroll height reaches this value",
  "nz-back-top.nzTarget.description": "specifies the scrollable area dom node",
  "nz-back-top.nzDuration.description": "Time to return to top (ms)",
  "nz-back-top.nzClick.description": "a callback function, which can be executed when you click the button",
  "nz-badge.title": "Badge",
  "nz-badge.whenToUse": "Badge normally appears in proximity to notifications or user avatars with eye-catching appeal, typically displaying unread messages count.",
  "nz-badge.description": "",
  "nz-badge.nzStandalone.description": "Whether standalone mode",
  "nz-badge.nzColor.description": "Customize Badge dot color",
  "nz-badge.nzCount.description": "Number to show in badge",
  "nz-badge.nzDot.description": "Whether to display a red dot instead of `count`",
  "nz-badge.nzShowDot.description": "Whether to display the red dot",
  "nz-badge.nzOverflowCount.description": "Max count to show",
  "nz-badge.nzShowZero.description": "Whether to show badge when `count` is zero",
  "nz-badge.nzSize.description": "If `nzCount` is set, `size` sets the size of badge",
  "nz-badge.nzStatus.description": "Set `nz-badge` as a status dot",
  "nz-badge.nzText.description": "If `nzStatus` is set, `text` sets the display text of the status `dot`",
  "nz-badge.nzTitle.description": "Text to show when hovering over the badge（Only Non-standalone), hide when value is `null`",
  "nz-badge.nzOffset.description": "set offset of the badge dot, like `[x, y]` (Only Non-standalone)",
  "nz-ribbon.title": "Badge",
  "nz-ribbon.whenToUse": "Badge normally appears in proximity to notifications or user avatars with eye-catching appeal, typically displaying unread messages count.",
  "nz-ribbon.description": "",
  "nz-ribbon.nzColor.description": "Customize Ribbon color",
  "nz-ribbon.nzPlacement.description": "The placement of the Ribbon",
  "nz-ribbon.nzText.description": "Content inside the Ribbon",
  "nz-breadcrumb.title": "Breadcrumb",
  "nz-breadcrumb.whenToUse": "- When the system has more than two layers in a hierarchy.\n- When you need to inform the user of where they are.\n- When the user may need to navigate back to a higher level.\n- When the application has multi-layer architecture.",
  "nz-breadcrumb.description": "",
  "nz-breadcrumb.nzSeparator.description": "Custom separator",
  "nz-breadcrumb.nzAutoGenerate.description": "Auto generate breadcrumb",
  "nz-breadcrumb.nzRouteLabel.description": "Name of property that determines displayed text in routing config. It should be used when `nzAutoGenerate` is `true`",
  "nz-breadcrumb.nzRouteLabelFn.description": "Format breadcrumb item label text, normally used in international app to translate i18n key. It should be used when `nzAutoGenerate` is `true`",
  "nz-breadcrumb.nzRouteFn.description": "Format breadcrumb item route, normally used in international app to bind current params or query strings to avoid losing them while navigate using breadcrumb. It should be used when `nzAutoGenerate` is `true`",
  "nz-button.title": "Button",
  "nz-button.whenToUse": "A button means an operation (or a series of operations). Clicking a button will trigger corresponding business logic.",
  "nz-button.description": "Note：nz-button is a Directive, it accepts all props which are supported by [native button](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button).",
  "nz-button.disabled.description": "prevents a user from interacting with the button",
  "nz-button.nzGhost.description": "make background transparent and invert text and border colors",
  "nz-button.nzLoading.description": "set the loading status of button",
  "nz-button.nzShape.description": "can be set to `circle` `round` or omitted",
  "nz-button.nzSize.description": "can be set to `small` `large` or omitted",
  "nz-button.nzType.description": "can be set to `primary` `dashed` `text` `link` or omitted (meaning `default`)",
  "nz-button.nzBlock.description": "option to fit button width to its parent width",
  "nz-button.nzDanger.description": "set the danger status of button",
  "nz-calendar.title": "Calendar",
  "nz-calendar.whenToUse": "When data is in the form of dates, such as schedules, timetables, prices calendar, lunar calendar. This component also supports Year/Month switch.",
  "nz-calendar.description": "",
  "nz-calendar.ngModel.description": "(Two-way bindable) The current selected date",
  "nz-calendar.nzMode.description": "The display mode of the calendar (two-way bindable)",
  "nz-calendar.nzFullscreen.description": "Whether to display in full-screen",
  "nz-calendar.nzDateCell.description": "(Contentable) Customize the display of the date cell, the template content will be appended to the cell",
  "nz-calendar.nzDateFullCell.description": "(Contentable) Customize the display of the date cell, the template content will override the cell",
  "nz-calendar.nzMonthCell.description": "(Contentable) Customize the display of the month cell, the template content will be appended to the cell",
  "nz-calendar.nzMonthFullCell.description": "(Contentable) Customize the display of the month cell, the template content will override the cell",
  "nz-calendar.nzCustomHeader.description": "Render custom header in panel",
  "nz-calendar.nzDisabledDate.description": "specify the date that cannot be selected",
  "nz-calendar.nzPanelChange.description": "Callback for when panel changes",
  "nz-calendar.nzSelectChange.description": "A callback function of selected item",
  "nz-card.title": "Card",
  "nz-card.whenToUse": "A card can be used to display content related to a single subject. The content can consist of multiple elements of varying types and sizes.",
  "nz-card.description": "",
  "nz-card.nzActions.description": "The action list, shows at the bottom of the Card.",
  "nz-card.nzBodyStyle.description": "Inline style to apply to the card content",
  "nz-card.nzBordered.description": "Toggles rendering of the border around the card",
  "nz-card.nzCover.description": "Card cover",
  "nz-card.nzExtra.description": "Content to render in the top-right corner of the card",
  "nz-card.nzHoverable.description": "Lift up when hovering card",
  "nz-card.nzLoading.description": "Shows a loading indicator while the contents of the card are being fetched",
  "nz-card.nzTitle.description": "Card title",
  "nz-card.nzType.description": "Card style type, can be set to `inner` or not set",
  "nz-card.nzSize.description": "Size of card",
  "nz-card-meta.title": "Card",
  "nz-card-meta.whenToUse": "A card can be used to display content related to a single subject. The content can consist of multiple elements of varying types and sizes.",
  "nz-card-meta.description": "",
  "nz-card-meta.nzAvatar.description": "avatar or icon",
  "nz-card-meta.nzDescription.description": "description content",
  "nz-card-meta.nzTitle.description": "title content",
  "nz-card-grid.title": "Card",
  "nz-card-grid.whenToUse": "A card can be used to display content related to a single subject. The content can consist of multiple elements of varying types and sizes.",
  "nz-card-grid.description": "",
  "nz-card-grid.nzHoverable.description": "Lift up when hovering card",
  "nz-card-tab.title": "Card",
  "nz-card-tab.whenToUse": "A card can be used to display content related to a single subject. The content can consist of multiple elements of varying types and sizes.",
  "nz-card-tab.description": "Area for tab card",
  "nz-carousel.title": "Carousel",
  "nz-carousel.whenToUse": "- When there is a group of content on the same level.\n- When there is insufficient content space, it can be used to save space in the form of a revolving door.\n- Commonly used for a group of pictures/cards.",
  "nz-carousel.description": "",
  "nz-carousel.nzAutoPlay.description": "Whether to scroll automatically",
  "nz-carousel.nzAutoPlaySpeed.description": "Duration (milliseconds), does not scroll when set to 0",
  "nz-carousel.nzDotRender.description": "Dot render template",
  "nz-carousel.nzDotPosition.description": "The position of the dots, which can be one of `top` `bottom` `left` `right`",
  "nz-carousel.nzDots.description": "Whether to show the dots at the bottom of the gallery",
  "nz-carousel.nzEffect.description": "Transition effect",
  "nz-carousel.nzEnableSwipe.description": "Whether to support swipe gesture",
  "nz-carousel.nzLoop.description": "Whether to enable the carousel to go in a loop",
  "nz-carousel.nzArrows.description": "Whether to show the arrow buttons",
  "nz-carousel.nzAfterChange.description": "Callback function called after the current index changes",
  "nz-carousel.nzBeforeChange.description": "Callback function called before the current index changes",
  "nz-cascader.title": "Cascader",
  "nz-cascader.whenToUse": "- When you need to select from a set of a hierarchical structure. Such as province/city/district, company level, and classification.\n- When selecting from a large data set, with multi-stage classification separated for easy selection.\n- Chooses cascade items in one float layer for a better user experience.",
  "nz-cascader.description": "",
  "nz-cascader.ngModel.description": "selected value",
  "nz-cascader.nzAllowClear.description": "whether allow clear",
  "nz-cascader.nzAutoFocus.description": "whether auto focus the input box",
  "nz-cascader.nzBackdrop.description": "whether or not the overlay should attach a backdrop",
  "nz-cascader.nzChangeOn.description": "change value on each selection if this function returns `true`",
  "nz-cascader.nzChangeOnSelect.description": "change value on each selection if set to true, see above demo for details",
  "nz-cascader.nzColumnClassName.description": "additional className of column in the popup overlay",
  "nz-cascader.nzDisabled.description": "whether select should be disabled",
  "nz-cascader.nzExpandIcon.description": "customize the current item expand icon",
  "nz-cascader.nzExpandTrigger.description": "expand current item when clicked or hovered, one of 'click' 'hover'",
  "nz-cascader.nzLabelProperty.description": "the label property name of options",
  "nz-cascader.nzLabelRender.description": "render template of displaying selected options",
  "nz-cascader.nzLoadData.description": "to load option lazily. Lazy load will be called immediately if the setting is `ngModel` with an array value and `nzOptions` is not set",
  "nz-cascader.nzMenuClassName.description": "additional className of popup overlay",
  "nz-cascader.nzMouseEnterDelay.description": "duration in milliseconds before opening the popup overlay when the mouse enters the trigger",
  "nz-cascader.nzMouseLeaveDelay.description": "duration in milliseconds before closing the popup overlay when the mouse leaves the trigger",
  "nz-cascader.nzMenuStyle.description": "additional css style of popup overlay",
  "nz-cascader.nzMultiple.description": "support multiple or not",
  "nz-cascader.nzNotFoundContent.description": "specify content to show when no result matches",
  "nz-cascader.nzOptionRender.description": "render template of cascader options",
  "nz-cascader.nzOptions.description": "data options of cascade",
  "nz-cascader.nzOpen.description": "Set visible of cascader popup",
  "nz-cascader.nzPlaceHolder.description": "input placeholder",
  "nz-cascader.nzPlacement.description": "popup placement",
  "nz-cascader.nzShowArrow.description": "whether show arrow",
  "nz-cascader.nzShowInput.description": "whether show input",
  "nz-cascader.nzShowSearch.description": "whether support search. Cannot be used with `[nzLoadData]` at the same time",
  "nz-cascader.nzSize.description": "input size, one of `large` `default` `small`",
  "nz-cascader.nzStatus.description": "set validation status",
  "nz-cascader.nzPrefix.description": "custom prefix",
  "nz-cascader.nzSuffixIcon.description": "custom suffix icon",
  "nz-cascader.nzValueProperty.description": "value property name of options",
  "nz-cascader.nzVariant.description": "Variants of Cascader",
  "nz-cascader.ngModelChange.description": "emit on values change",
  "nz-cascader.nzClear.description": "emit on clear values",
  "nz-cascader.nzVisibleChange.description": "emit on popup menu visible or hide",
  "nz-cascader.nzRemoved.description": "emit on selected item removed when `nzMultiple` is `true`",
  "nz-cascader.nzSelectionChange.description": "emit on values change",
  "nz-check-list.title": "CheckList",
  "nz-check-list.whenToUse": "If the current page business logic is too complex, and with a more mandatory sequential flow control, then you can use this component to help you simplify the process.",
  "nz-check-list.description": "",
  "nz-check-list.nzItems.description": "check list elements",
  "nz-check-list.nzVisible.description": "show check-list",
  "nz-check-list.nzIndex.description": "current index",
  "nz-check-list.nzProgress.description": "show progress",
  "nz-check-list.nzTriggerRender.description": "rendering template for float button",
  "nz-check-list.nzTitle.description": "rendering template for the check-list panel title",
  "nz-check-list.nzFooter.description": "rendering template for the check-list panel footer",
  "nz-check-list.nzHide.description": "callback for hiding the check list",
  "nz-check-list.key.description": "unique identifier",
  "nz-check-list.description.description": "description content",
  "nz-check-list.checked.description": "Current inventory status",
  "nz-check-list.onClick.description": "method triggered by clicking the step",
  "nz-checkbox.title": "Checkbox",
  "nz-checkbox.whenToUse": "- Used for selecting multiple values from several options.\n- If you use only one checkbox, it is the same as using Switch to toggle between two states. The difference is that Switch will trigger the state change directly, but Checkbox just marks the state as changed and this needs to be submitted.",
  "nz-checkbox.description": "",
  "nz-checkbox.nzId.description": "input id attribute inside the component",
  "nz-checkbox.nzName.description": "input name attribute inside the component",
  "nz-checkbox.nzAutoFocus.description": "get focus when component mounted",
  "nz-checkbox.nzDisabled.description": "Disable checkbox",
  "nz-checkbox.ngModel.description": "Specifies whether the checkbox is selected, double binding",
  "nz-checkbox.nzIndeterminate.description": "set the status of indeterminate，only affect the style",
  "nz-checkbox.nzValue.description": "use for the callback of `nz-checkbox-wrapper`",
  "nz-checkbox.ngModelChange.description": "The callback function that is triggered when the state changes.",
  "nz-checkbox-group.title": "Checkbox",
  "nz-checkbox-group.whenToUse": "- Used for selecting multiple values from several options.\n- If you use only one checkbox, it is the same as using Switch to toggle between two states. The difference is that Switch will trigger the state change directly, but Checkbox just marks the state as changed and this needs to be submitted.",
  "nz-checkbox-group.description": "",
  "nz-checkbox-group.ngModel.description": "Specifies options, double binding",
  "nz-checkbox-group.nzName.description": "The `name` property of all input children",
  "nz-checkbox-group.nzOptions.description": "Specifies options",
  "nz-checkbox-group.nzDisabled.description": "Disable all checkboxes",
  "nz-checkbox-group.ngModelChange.description": "The callback function that is triggered when the state changes.",
  "nz-checkbox-wrapper.title": "Checkbox",
  "nz-checkbox-wrapper.whenToUse": "- Used for selecting multiple values from several options.\n- If you use only one checkbox, it is the same as using Switch to toggle between two states. The difference is that Switch will trigger the state change directly, but Checkbox just marks the state as changed and this needs to be submitted.",
  "nz-checkbox-wrapper.description": "",
  "nz-checkbox-wrapper.nzOnChange.description": "The callback function that is triggered when the state changes.",
  "nz-code-editor.title": "Code Editor",
  "nz-code-editor.whenToUse": "When you want to use monaco editor in Angular.",
  "nz-code-editor.description": "",
  "nz-code-editor.nzEditorMode.description": "Mode of monaco editor",
  "nz-code-editor.nzLoading.description": "Show the loading spin",
  "nz-code-editor.nzOriginalText.description": "The content of the left editor in `diff` mode",
  "nz-code-editor.nzFullControl.description": "Enable full control mode. User should manage `TextModel` manually in this mode",
  "nz-code-editor.nzEditorOption.description": "[Please refer to the doc of monaco editor](https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.ieditorconstructionoptions.html)",
  "nz-code-editor.nzToolkit.description": "A placeholder for adding some quick actions",
  "nz-code-editor.nzEditorInitialized.description": "The event that a code editor is initialized",
  "nz-collapse.title": "Collapse",
  "nz-collapse.whenToUse": "- Can be used to group or hide complex regions to keep the page clean.\n- `Accordion` is a special kind of `Collapse`, which allows only one panel to be expanded at a time.",
  "nz-collapse.description": "",
  "nz-collapse.nzAccordion.description": "Accordion mode",
  "nz-collapse.nzBordered.description": "Set border style",
  "nz-collapse.nzGhost.description": "Make the collapse borderless and its background transparent",
  "nz-collapse.nzExpandIconPosition.description": "Set expand icon position",
  "nz-collapse.nzSize.description": "Set size of collapse",
  "nz-collapse-panel.title": "Collapse",
  "nz-collapse-panel.whenToUse": "- Can be used to group or hide complex regions to keep the page clean.\n- `Accordion` is a special kind of `Collapse`, which allows only one panel to be expanded at a time.",
  "nz-collapse-panel.description": "",
  "nz-collapse-panel.nzDisabled.description": "If `true`, panel cannot be opened or closed",
  "nz-collapse-panel.nzHeader.description": "Title of the panel",
  "nz-collapse-panel.nzExpandedIcon.description": "Customize an icon for toggle",
  "nz-collapse-panel.nzExtra.description": "Extra element in the corner",
  "nz-collapse-panel.nzShowArrow.description": "Display arrow or not",
  "nz-collapse-panel.nzActive.description": "Active status of panel, double binding",
  "nz-collapse-panel.nzCollapsible.description": "Set collapsible trigger area",
  "nz-collapse-panel.nzActiveChange.description": "Callback function of the active status",
  "nz-color-picker.title": "ColorPicker",
  "nz-color-picker.whenToUse": "Used when the user needs to customize the color selection.",
  "nz-color-picker.description": "",
  "nz-color-picker.nzFormat.description": "Format of color",
  "nz-color-picker.nzValue.description": "Value of color",
  "nz-color-picker.nzSize.description": "Setting the trigger size",
  "nz-color-picker.nzDefaultValue.description": "Default value of color",
  "nz-color-picker.nzAllowClear.description": "Allow clearing color selected",
  "nz-color-picker.nzTrigger.description": "ColorPicker trigger mode",
  "nz-color-picker.nzShowText.description": "Show color text",
  "nz-color-picker.nzOpen.description": "Whether to show popups",
  "nz-color-picker.nzDisabled.description": "Disable ColorPicker",
  "nz-color-picker.nzDisabledAlpha.description": "Disable Alpha",
  "nz-color-picker.nzTitle.description": "Setting the title of the color picker",
  "nz-color-picker.nzOnChange.description": "Callback when value is changed",
  "nz-color-picker.nzOnClear.description": "Called when clear",
  "nz-color-picker.nzOnFormatChange.description": "Callback when `format` is changed",
  "nz-color-picker.nzOnOpenChange.description": "Callback for opening the color panel",
  "nz-color-picker.toHex.description": "Convert to `hex` format characters, the return type like: `1677ff`",
  "nz-color-picker.toHexString.description": "Convert to `hex` format color string, the return type like: `#1677ff`",
  "nz-color-picker.toHsb.description": "Convert to `hsb` object",
  "nz-color-picker.toHsbString.description": "Convert to `hsb` format color string, the return type like: `hsb(215, 91%, 100%)`",
  "nz-color-picker.toRgb.description": "Convert to `rgb` object",
  "nz-color-picker.toRgbString.description": "Convert to `rgb` format color string, the return type like: `rgb(22, 119, 255)`",
  "nz-color-block.title": "ColorPicker",
  "nz-color-block.whenToUse": "Used when the user needs to customize the color selection.",
  "nz-color-block.description": "",
  "nz-color-block.nzColor.description": "Module colors",
  "nz-color-block.nzSize.description": "Color block size",
  "nz-color-block.nzOnClick.description": "Callbacks for clicking on color blocks",
  "nz-comment.title": "Comment",
  "nz-comment.whenToUse": "Comments can be used to enable discussions on an entity such as a page, blog post, issue or other.",
  "nz-comment.description": "",
  "nz-comment.nzAuthor.description": "The element to display as the comment author",
  "nz-comment.nzDatetime.description": "A datetime element containing the time to be displayed",
  "nz-comment-avatar.title": "Comment",
  "nz-comment-avatar.whenToUse": "Comments can be used to enable discussions on an entity such as a page, blog post, issue or other.",
  "nz-comment-avatar.description": "The element to display as the comment avatar.",
  "nz-comment-content.title": "Comment",
  "nz-comment-content.whenToUse": "Comments can be used to enable discussions on an entity such as a page, blog post, issue or other.",
  "nz-comment-content.description": "The main content of the comment.",
  "nz-comment-action.title": "Comment",
  "nz-comment-action.whenToUse": "Comments can be used to enable discussions on an entity such as a page, blog post, issue or other.",
  "nz-comment-action.description": "The element items rendered below the comment content.",
  "nz-cron-expression.title": "cron form",
  "nz-cron-expression.whenToUse": "When you want to use cron expression in Angular.",
  "nz-cron-expression.description": "",
  "nz-cron-expression.nzType.description": "Cron rule type",
  "nz-cron-expression.nzDisabled.description": "Disable",
  "nz-cron-expression.nzBorderless.description": "Whether to hide the border",
  "nz-cron-expression.nzSize.description": "The size of the input box.",
  "nz-cron-expression.nzCollapseDisable.description": "Hide collapse",
  "nz-cron-expression.nzExtra.description": "Render the content on the right",
  "nz-cron-expression.nzSemantic.description": "Custom rendering next execution time",
  "nz-date-picker.title": "DatePicker",
  "nz-date-picker.whenToUse": "By clicking the input box, you can select a date from a popup calendar.",
  "nz-date-picker.description": "",
  "nz-date-picker.nzDateRender.description": "custom rendering function for date cells (Not support by month-picker/year-picker)",
  "nz-date-picker.nzDisabledTime.description": "to specify the time that cannot be selected",
  "nz-date-picker.nzShowTime.description": "to provide an additional time selection",
  "nz-date-picker.nzShowToday.description": "whether to show 'Today' button",
  "nz-date-picker.nzShowNow.description": "whether to show 'Now' button on panel when `nzShowTime` is set",
  "nz-date-picker.nzShowWeekNumber.description": "whether to show the week number on each row (Only supported by date picker. Week picker always shows week numbers)",
  "nz-date-picker.nzOnOk.description": "callback when click ok button",
  "nz-date-picker.nzId.description": "input id attribute inside the component",
  "nz-date-picker.nzAllowClear.description": "Whether to show clear button",
  "nz-date-picker.nzAutoFocus.description": "get focus when component mounted",
  "nz-date-picker.nzBackdrop.description": "whether or not the overlay should attach a backdrop",
  "nz-date-picker.nzDefaultPickerValue.description": "default picker date",
  "nz-date-picker.nzDisabled.description": "determine whether the nz-date-picker is disabled",
  "nz-date-picker.nzDisabledDate.description": "specify the date that cannot be selected",
  "nz-date-picker.nzDropdownClassName.description": "to customize the className of the popup calendar",
  "nz-date-picker.nzFormat.description": "to set the date format, see `nzFormat special instructions`",
  "nz-date-picker.nzInputReadOnly.description": "set the readonly attribute of the input tag (avoids virtual keyboard on touch devices)",
  "nz-date-picker.nzLocale.description": "localization configuration",
  "nz-date-picker.nzMode.description": "Set picker mode",
  "nz-date-picker.nzPlaceHolder.description": "placeholder of date input",
  "nz-date-picker.nzPopupStyle.description": "to customize the style of the popup calendar",
  "nz-date-picker.nzRenderExtraFooter.description": "render extra footer in panel",
  "nz-date-picker.nzSize.description": "determine the size of the input box, the height of `large` and `small`, are 40px and 24px respectively, while default size is 32px",
  "nz-date-picker.nzStatus.description": "Set validation status",
  "nz-date-picker.nzPlacement.description": "The position where the selection box pops up",
  "nz-date-picker.nzSuffixIcon.description": "the custom suffix icon",
  "nz-date-picker.nzBorderless.description": "~~remove the border~~",
  "nz-date-picker.nzVariant.description": "Variants of DatePicker",
  "nz-date-picker.nzInline.description": "inline mode",
  "nz-date-picker.nzOnOpenChange.description": "a callback emitter, can be executed whether the popup calendar is popped up or closed",
  "nz-date-picker.nzOnPanelChange.description": "a callback emitter, can be executed when the panel changes",
  "nz-date-picker.ngModel.description": "Date",
  "nz-range-picker.title": "DatePicker",
  "nz-range-picker.whenToUse": "By clicking the input box, you can select a date from a popup calendar.",
  "nz-range-picker.description": "",
  "nz-range-picker.nzShowTime.description": "to provide an additional time selection",
  "nz-range-picker.nzDisabledTime.description": "to specify the time that cannot be selected",
  "nz-range-picker.nzShowWeekNumber.description": "whether to show the week number on each row (Only supported by date picker. Week picker always shows week numbers)",
  "nz-range-picker.nzOnOk.description": "click ok callback",
  "nz-range-picker.nzId.description": "input id attribute inside the component",
  "nz-range-picker.nzAllowClear.description": "Whether to show clear button",
  "nz-range-picker.nzAutoFocus.description": "get focus when component mounted",
  "nz-range-picker.nzBackdrop.description": "whether or not the overlay should attach a backdrop",
  "nz-range-picker.nzDefaultPickerValue.description": "default picker date",
  "nz-range-picker.nzDisabled.description": "determine whether the nz-date-picker is disabled",
  "nz-range-picker.nzDisabledDate.description": "specify the date that cannot be selected",
  "nz-range-picker.nzDropdownClassName.description": "to customize the className of the popup calendar",
  "nz-range-picker.nzFormat.description": "to set the date format, see `nzFormat special instructions`",
  "nz-range-picker.nzInputReadOnly.description": "set the readonly attribute of the input tag (avoids virtual keyboard on touch devices)",
  "nz-range-picker.nzLocale.description": "localization configuration",
  "nz-range-picker.nzMode.description": "Set picker mode",
  "nz-range-picker.nzPlaceHolder.description": "placeholder of date input",
  "nz-range-picker.nzPopupStyle.description": "to customize the style of the popup calendar",
  "nz-range-picker.nzRenderExtraFooter.description": "render extra footer in panel",
  "nz-range-picker.nzSize.description": "determine the size of the input box, the height of `large` and `small`, are 40px and 24px respectively, while default size is 32px",
  "nz-range-picker.nzStatus.description": "Set validation status",
  "nz-range-picker.nzPlacement.description": "The position where the selection box pops up",
  "nz-range-picker.nzSuffixIcon.description": "the custom suffix icon",
  "nz-range-picker.nzBorderless.description": "~~remove the border~~",
  "nz-range-picker.nzVariant.description": "Variants of DatePicker",
  "nz-range-picker.nzInline.description": "inline mode",
  "nz-range-picker.nzOnOpenChange.description": "a callback emitter, can be executed whether the popup calendar is popped up or closed",
  "nz-range-picker.nzOnPanelChange.description": "a callback emitter, can be executed when the panel changes",
  "nz-range-picker.ngModel.description": "Date",
  "nz-range-picker.nzRanges.description": "preseted ranges for quick selection",
  "nz-range-picker.nzSeparator.description": "separator",
  "nz-range-picker.nzOnCalendarChange.description": "The start time or the end time of the range change callback",
  "nz-descriptions.title": "Descriptions",
  "nz-descriptions.whenToUse": "Commonly displayed on the details page.",
  "nz-descriptions.description": "",
  "nz-descriptions.nzTitle.description": "Describe the title of the list, displayed at the top",
  "nz-descriptions.nzExtra.description": "The action area of the description list, placed at the top-right",
  "nz-descriptions.nzBordered.description": "Whether to display the border",
  "nz-descriptions.nzColumn.description": "The number of `nz-descriptions-item` in a row. It could be a number or a object like `{ xs: 8, sm: 16, md: 24}`",
  "nz-descriptions.nzSize.description": "Set the size of the list. Only works when `nzBordered` is set",
  "nz-descriptions.nzColon.description": "Show colon after title",
  "nz-descriptions.nzLayout.description": "Set the layout of the list",
  "nz-descriptions-item.title": "Descriptions",
  "nz-descriptions-item.whenToUse": "Commonly displayed on the details page.",
  "nz-descriptions-item.description": "",
  "nz-descriptions-item.nzTitle.description": "Description of the content",
  "nz-descriptions-item.nzSpan.description": "The number of columns included",
  "nz-divider.title": "Divider",
  "nz-divider.whenToUse": "- Divide sections of article.\n- Divide inline text and links such as the operation column of table.",
  "nz-divider.description": "",
  "nz-divider.nzDashed.description": "whether line is dashed",
  "nz-divider.nzType.description": "direction type of divider",
  "nz-divider.nzText.description": "inner text of divider",
  "nz-divider.nzPlain.description": "Divider text show as plain style",
  "nz-divider.nzOrientation.description": "inner text orientation",
  "nz-divider.nzVariant.description": "Whether line is dashed, dotted or solid",
  "nz-divider.nzSize.description": "Divider size",
  "nz-drawer.title": "Drawer",
  "nz-drawer.whenToUse": "- Use a Form to create or edit a set of information.\n- Processing subtasks. When subtasks are too heavy for Popover and we still want to keep the subtasks in the context of\nthe main task, Drawer comes very handy.\n- When a same Form is needed in multiple places.",
  "nz-drawer.description": "",
  "nz-drawer.nzClosable.description": "Whether a close (x) button is visible on top left of the Drawer dialog or not.",
  "nz-drawer.nzCloseIcon.description": "Custom close icon",
  "nz-drawer.nzExtra.description": "Extra actions area at corner.",
  "nz-drawer.nzMask.description": "Whether to show mask or not.",
  "nz-drawer.nzMaskClosable.description": "Clicking on the mask (area outside the Drawer) to close the Drawer or not.",
  "nz-drawer.nzCloseOnNavigation.description": "Whether to close the drawer when the user goes backwards/forwards in history. Note that this usually doesn't include clicking on links (unless the user is using the HashLocationStrategy).",
  "nz-drawer.nzKeyboard.description": "Whether support press esc to close",
  "nz-drawer.nzMaskStyle.description": "Style for Drawer's mask element.",
  "nz-drawer.nzBodyStyle.description": "Body style for drawer body element. Such as height, padding etc.",
  "nz-drawer.nzTitle.description": "The title for Drawer.",
  "nz-drawer.nzFooter.description": "The footer for Drawer.",
  "nz-drawer.nzVisible.description": "Whether the Drawer dialog is visible or not, you can use `[(nzVisible)]` two-way binding",
  "nz-drawer.nzPlacement.description": "The placement of the Drawer.",
  "nz-drawer.nzSize.description": "Preset size of drawer, default `378px` and large `736px`.",
  "nz-drawer.nzWidth.description": "Width of the Drawer dialog, only when placement is `'right'` or `'left'`, having a higher priority than `nzSize`.",
  "nz-drawer.nzHeight.description": "Height of the Drawer dialog, only when placement is `'top'` or `'bottom'`, having a higher priority than `nzSize`.",
  "nz-drawer.nzOffsetX.description": "The X coordinate offset(px), only when placement is `'right'` or `'left'`.",
  "nz-drawer.nzOffsetY.description": "The Y coordinate offset(px), only when placement is `'top'` or `'bottom'`.",
  "nz-drawer.nzWrapClassName.description": "The class name of the container of the Drawer dialog.",
  "nz-drawer.nzZIndex.description": "The `z-index` of the Drawer.",
  "nz-drawer.nzOnClose.description": "Specify a callback that will be called when a user clicks mask, close button or Cancel button.",
  "nz-dropdown.title": "Dropdown",
  "nz-dropdown.whenToUse": "If there are too many operations to display, you can wrap them in a `Dropdown`. By clicking/hovering on the trigger, a dropdown menu should appear, which allows you to choose one option and execute relevant actions.",
  "nz-dropdown.description": "",
  "nz-dropdown.nzDropdownMenu.description": "Dropdown menu",
  "nz-dropdown.nzDisabled.description": "whether the dropdown menu is disabled",
  "nz-dropdown.nzPlacement.description": "placement of pop menu",
  "nz-dropdown.nzTrigger.description": "the trigger mode which executes the drop-down action",
  "nz-dropdown.nzClickHide.description": "whether hide menu when click",
  "nz-dropdown.nzVisible.description": "whether the dropdown menu is visible, double binding",
  "nz-dropdown.nzOverlayClassName.description": "Class name of the dropdown root element",
  "nz-dropdown.nzOverlayStyle.description": "Style of the dropdown root element",
  "nz-dropdown.nzVisibleChange.description": "a callback function takes an argument: `nzVisible`, is executed when the visible state is changed",
  "nz-dropdown.nzArrow.description": "Whether the dropdown arrow should be visible",
  "nz-dropdown-menu.title": "Dropdown",
  "nz-dropdown-menu.whenToUse": "If there are too many operations to display, you can wrap them in a `Dropdown`. By clicking/hovering on the trigger, a dropdown menu should appear, which allows you to choose one option and execute relevant actions.",
  "nz-dropdown-menu.description": "Wrap Dropdown Menu and pass to `[nz-dropdown]` and `NzContextMenuService`, you can export it via Template Syntax `nzDropdownMenu`",
  "nz-empty.title": "Empty",
  "nz-empty.whenToUse": "When there is no data provided, display for friendly tips.",
  "nz-empty.description": "",
  "nz-empty.nzNotFoundImage.description": "Customize image. Will tread as image url when string provided",
  "nz-empty.nzNotFoundContent.description": "Custom description",
  "nz-empty.nzNotFoundFooter.description": "Custom Footer",
  "nz-image.title": "Image",
  "nz-image.whenToUse": "- When you need to display pictures.\n- Display when loading a large image or fault-tolerant handling when loading fail.",
  "nz-image.description": "",
  "nz-image.nzSrc.description": "Image path",
  "nz-image.nzAlt.description": "Alt",
  "nz-image.nzWidth.description": "Width",
  "nz-image.nzHeight.description": "Height",
  "nz-image.nzAutoSrcset.description": "Whether to optimize image loading",
  "nz-image.nzSrcLoader.description": "Loader",
  "nz-image.nzPriority.description": "Whether to add [preload](https://developer.mozilla.org/en-US/docs/Web/HTML/Preloading_content) (only SSR)",
  "nz-flex.title": "Flex",
  "nz-flex.whenToUse": "- Good for setting spacing between elements.\n- Suitable for setting various horizontal and vertical alignments.",
  "nz-flex.description": "",
  "nz-flex.nzVertical.description": "Is direction of the flex vertical, use `flex-direction: column`",
  "nz-flex.nzJustify.description": "Sets the alignment of elements in the direction of the main axis",
  "nz-flex.nzAlign.description": "Sets the alignment of elements in the direction of the cross axis",
  "nz-flex.nzGap.description": "Sets the gap between items",
  "nz-flex.nzWrap.description": "Set whether the element is displayed in a single line or in multiple lines",
  "nz-flex.nzFlex.description": "Flex CSS shorthand properties",
  "nz-float-button-group.title": "FloatButton",
  "nz-float-button-group.whenToUse": "- For global functionality on the site.\n- Buttons that can be seen wherever you browse.",
  "nz-float-button-group.description": "",
  "nz-float-button-group.nzShape.description": "Shape of button group",
  "nz-float-button-group.nzTrigger.description": "Which action can trigger menu open/close",
  "nz-float-button-group.nzPlacement.description": "Customize menu animation placement",
  "nz-float-button-group.nzOpen.description": "Whether the menu is visible or not",
  "nz-float-button-group.nzOnOpenChange.description": "Callback executed when active menu is changed",
  "nz-float-button-top.title": "FloatButton",
  "nz-float-button-top.whenToUse": "- For global functionality on the site.\n- Buttons that can be seen wherever you browse.",
  "nz-float-button-top.description": "",
  "nz-float-button-top.nzVisibilityHeight.description": "The `nz-float-button-top` button will not show until the scroll height reaches this value",
  "nz-float-button-top.nzTarget.description": "Specifies the scrollable area dom node",
  "nz-float-button-top.nzDuration.description": "Duration of scrolling to top (ms)",
  "nz-float-button-top.nzOnClick.description": "Callback executed when click the button",
  "nz-form.title": "Form",
  "nz-form.whenToUse": "- When you need to create an instance or collect information.\n- When you need to validate fields in certain rules.",
  "nz-form.description": "",
  "nz-form.nzLayout.description": "Form layout",
  "nz-form.nzAutoTips.description": "Set default props `[nzAutoTips]` value of `nz-form-control`, please refer to the example: **Auto tips**",
  "nz-form.nzDisableAutoTips.description": "Set default props `[nzDisableAutoTip]` value of `nz-form-control`",
  "nz-form.nzNoColon.description": "Set default props `[nzNoColon]` value of `nz-form-label`",
  "nz-form.nzTooltipIcon.description": "Set default props `[nzTooltipIcon]` value of `nz-form-label`",
  "nz-form.nzLabelAlign.description": "Set default props `[nzLabelAlign]` value of `nz-form-label`",
  "nz-form.nzLabelWrap.description": "Set default props `[nzLabelWrap]` value of `nz-form-label`",
  "nz-form-item.title": "Form",
  "nz-form-item.whenToUse": "- When you need to create an instance or collect information.\n- When you need to validate fields in certain rules.",
  "nz-form-item.description": "Used to separate the item in forms, contains label(optional) and control field.",
  "nz-form-item.nzAlign.description": "the vertical alignment",
  "nz-form-item.nzGutter.description": "spacing between grids, could be a number or a object like `{ xs: 8, sm: 16, md: 24}`. or you can use array to make horizontal and vertical spacing work at the same time `[horizontal, vertical]`",
  "nz-form-item.nzJustify.description": "horizontal arrangement",
  "nz-form-item.nzRequired.description": "add required style to current item",
  "nz-form-item.nzNoColon.description": "whether to not display `:` after label text.",
  "nz-form-item.nzFor.description": "The `for` property of `label`",
  "nz-form-item.nzTooltipTitle.description": "Set tooltip info",
  "nz-form-item.nzTooltipIcon.description": "Set icon of tooltip info",
  "nz-form-item.nzLabelAlign.description": "The text align of label",
  "nz-form-item.nzLabelWrap.description": "whether label can be wrap",
  "nz-form-label.title": "Form",
  "nz-form-label.whenToUse": "- When you need to create an instance or collect information.\n- When you need to validate fields in certain rules.",
  "nz-form-label.description": "The label of the form item, optional.",
  "nz-form-label.nzFlex.description": "flex layout style",
  "nz-form-label.nzOffset.description": "the number of cells to offset Col from the left",
  "nz-form-label.nzOrder.description": "raster order",
  "nz-form-label.nzPull.description": "the number of cells that raster is moved to the left",
  "nz-form-label.nzPush.description": "the number of cells that raster is moved to the right",
  "nz-form-label.nzSpan.description": "raster number of cells to occupy, 0 corresponds to `display: none`",
  "nz-form-label.nzXs.description": "`<576px` and also default setting, could be a `span` value or an object containing above props",
  "nz-form-label.nzSm.description": "`≥576px`, could be a `span` value or an object containing above props",
  "nz-form-label.nzMd.description": "`≥768px`, could be a `span` value or an object containing above props",
  "nz-form-label.nzLg.description": "`≥992px`, could be a `span` value or an object containing above props",
  "nz-form-label.nzXl.description": "`≥1200px`, could be a `span` value or an object containing above props",
  "nz-form-label.nzXXl.description": "`≥1600px`, could be a `span` value or an object containing above props",
  "nz-form-label.nzRequired.description": "add required style to current item",
  "nz-form-label.nzNoColon.description": "whether to not display `:` after label text.",
  "nz-form-label.nzFor.description": "The `for` property of `label`",
  "nz-form-label.nzTooltipTitle.description": "Set tooltip info",
  "nz-form-label.nzTooltipIcon.description": "Set icon of tooltip info",
  "nz-form-label.nzLabelAlign.description": "The text align of label",
  "nz-form-label.nzLabelWrap.description": "whether label can be wrap",
  "nz-form-control.title": "Form",
  "nz-form-control.whenToUse": "- When you need to create an instance or collect information.\n- When you need to validate fields in certain rules.",
  "nz-form-control.description": "Note：Due to the lack of partial Observable in [Angular Form](https://github.com/angular/angular/issues/10887), you have to notify `nz-form-control` to update its status with `updateValueAndValidity` when you update form status using methods like `markAsDirty`.",
  "nz-form-control.nzFlex.description": "flex layout style",
  "nz-form-control.nzOffset.description": "the number of cells to offset Col from the left",
  "nz-form-control.nzOrder.description": "raster order",
  "nz-form-control.nzPull.description": "the number of cells that raster is moved to the left",
  "nz-form-control.nzPush.description": "the number of cells that raster is moved to the right",
  "nz-form-control.nzSpan.description": "raster number of cells to occupy, 0 corresponds to `display: none`",
  "nz-form-control.nzXs.description": "`<576px` and also default setting, could be a `span` value or an object containing above props",
  "nz-form-control.nzSm.description": "`≥576px`, could be a `span` value or an object containing above props",
  "nz-form-control.nzMd.description": "`≥768px`, could be a `span` value or an object containing above props",
  "nz-form-control.nzLg.description": "`≥992px`, could be a `span` value or an object containing above props",
  "nz-form-control.nzXl.description": "`≥1200px`, could be a `span` value or an object containing above props",
  "nz-form-control.nzXXl.description": "`≥1600px`, could be a `span` value or an object containing above props",
  "nz-form-control.nzValidateStatus.description": "Will generate status based on the input `FormControl`, `NgModel` or string, the default value is the first `FormControl` or `NgModel` in `nz-form-control`",
  "nz-form-control.nzHasFeedback.description": "Used with `nzValidateStatus`, this option specifies the validation status icon. Recommended to be used only with `Input`.",
  "nz-form-control.nzExtra.description": "The extra prompt message",
  "nz-form-control.nzSuccessTip.description": "Tip display when validate success",
  "nz-form-control.nzWarningTip.description": "Tip display when validate warning",
  "nz-form-control.nzErrorTip.description": "Tip display when validate error",
  "nz-form-control.nzValidatingTip.description": "Tip display when validating",
  "nz-form-control.nzAutoTips.description": "The object of the tips, please refer to the example: **Auto tips**",
  "nz-form-control.nzDisableAutoTips.description": "Disable Auto Tips",
  "nz-form-split.title": "Form",
  "nz-form-split.whenToUse": "- When you need to create an instance or collect information.\n- When you need to validate fields in certain rules.",
  "nz-form-split.description": "The split icon of `-`",
  "nz-form-text.title": "Form",
  "nz-form-text.whenToUse": "- When you need to create an instance or collect information.\n- When you need to validate fields in certain rules.",
  "nz-form-text.description": "Text in `nz-form-control`",
  "nz-graph.title": "Graph",
  "nz-graph.whenToUse": "When you want to use graph in Angular.",
  "nz-graph.description": "",
  "nz-graph.nzGraphData.description": "Data source",
  "nz-graph.nzRankDirection.description": "Graph Direction",
  "nz-graph.nzAutoSize.description": "Whether to automatically adjust the height of the node, the default equal height",
  "nz-graph.nzGraphLayoutConfig.description": "Global config of graph",
  "nz-graph-zoom.title": "Graph",
  "nz-graph-zoom.whenToUse": "When you want to use graph in Angular.",
  "nz-graph-zoom.description": "",
  "nz-graph-zoom.nzZoom.description": "Default zoom scale",
  "nz-graph-zoom.nzMinZoom.description": "Minimum zoom scale",
  "nz-graph-zoom.nzMaxZoom.description": "Maximum zoom scale",
  "nz-graph-zoom.nzTransformEvent.description": "Event of zooming",
  "nz-graph-zoom.fitCenter.description": "Move graph to center",
  "nz-graph-zoom.focus.description": "Move target node to center",
  "nzGraphNode.title": "Graph",
  "nzGraphNode.whenToUse": "When you want to use graph in Angular.",
  "nzGraphNode.description": "Customize the graph node template",
  "nzGraphGroupNode.title": "Graph",
  "nzGraphGroupNode.whenToUse": "When you want to use graph in Angular.",
  "nzGraphGroupNode.description": "Customize the graph group-node template",
  "nzGraphEdge.title": "Graph",
  "nzGraphEdge.whenToUse": "When you want to use graph in Angular.",
  "nzGraphEdge.description": "Customize the graph edge template",
  "nz-hash-code.title": "HashCode",
  "nz-hash-code.whenToUse": "The hash code component is styled for 64-bit design, and if the data given is less than or more than 64-bit, it may\nbring some differences in presentation.",
  "nz-hash-code.description": "",
  "nz-hash-code.nzValue.description": "The value of the hash code",
  "nz-hash-code.nzTitle.description": "Description of the content in the upper left corner",
  "nz-hash-code.nzLogo.description": "Display in the upper right corner",
  "nz-hash-code.nzMode.description": "Demonstration Mode",
  "nz-hash-code.nzType.description": "style",
  "nz-hash-code.nzOnCopy.description": "Clicking the Copy callback",
  "nz-icon.title": "Icon",
  "nz-icon.whenToUse": "",
  "nz-icon.description": "",
  "nz-icon.nzType.description": "Type of the ant design icon",
  "nz-icon.nzTheme.description": "Type of the ant design icon",
  "nz-icon.nzSpin.description": "Rotate icon with animation",
  "nz-icon.nzTwotoneColor.description": "Primary color of the two-tone icon.",
  "nz-icon.nzIconfont.description": "Type of the icon from iconfont",
  "nz-icon.nzRotate.description": "Rotate degrees",
  "nz-image.nzFallback.description": "Load failure fault-tolerant src",
  "nz-image.nzPlaceholder.description": "Load placeholder src",
  "nz-image.nzDisablePreview.description": "Whether to disable the preview",
  "nz-image.nzCloseOnNavigation.description": "Whether to close the image preview when the user goes backwards/forwards in history. Note that this usually doesn't include clicking on links (unless the user is using the HashLocationStrategy).",
  "nz-image.nzDirection.description": "Text directionality",
  "nz-image.nzScaleStep.description": "`1 + nzScaleStep` is the step to increase or decrease the scale",
  "nz-input.title": "Input",
  "nz-input.whenToUse": "- A user input in a form field is needed.\n- A search input is required.",
  "nz-input.description": "All props of input supported by [w3c standards](https://www.w3schools.com/tags/tag_input.asp) and Angular can used in `nz-input`.",
  "nz-input.nzSize.description": "The size of the input box. Note: in the context of a form, the `large` size is used.",
  "nz-input.nzAutosize.description": "Only used for `textarea`, height autosize feature, can be set to `boolean` or an object `{ minRows: 2, maxRows: 6 }`",
  "nz-input.nzBorderless.description": "~~Whether hide border~~",
  "nz-input.nzVariant.description": "Variants of Input",
  "nz-input.nzStatus.description": "Set validation status",
  "nz-input.nzStepperless.description": "Whether hide stepper when input type is number",
  "nz-input-group.title": "Input",
  "nz-input-group.whenToUse": "- A user input in a form field is needed.\n- A search input is required.",
  "nz-input-group.description": "",
  "nz-input-group.nzAddOnAfter.description": "The label text displayed after (on the right side of) the input field, can work with `nzAddOnBefore`",
  "nz-input-group.nzAddOnBefore.description": "The label text displayed before (on the left side of) the input field, can work with `nzAddOnAfter`",
  "nz-input-group.nzPrefix.description": "The prefix icon for the Input, can work with `nzSuffix`",
  "nz-input-group.nzSuffix.description": "The suffix icon for the Input, can work with `nzPrefix`",
  "nz-input-group.nzSize.description": "The size of `nz-input-group` specifies the size of the included `nz-input` fields",
  "nz-input-group.nzStatus.description": "Set validation status",
  "nz-textarea-count.title": "Input",
  "nz-textarea-count.whenToUse": "- A user input in a form field is needed.\n- A search input is required.",
  "nz-textarea-count.description": "",
  "nz-textarea-count.nzMaxCharacterCount.description": "`textarea` maximum character count displayed",
  "nz-textarea-count.nzComputeCharacterCount.description": "customized `characterCount` computation function",
  "nz-input-otp.title": "Input",
  "nz-input-otp.whenToUse": "- A user input in a form field is needed.\n- A search input is required.",
  "nz-input-otp.description": "",
  "nz-input-otp.disabled.description": "Whether the input is disabled",
  "nz-input-otp.nzFormatter.description": "Format display, blank fields will be filled with ` `",
  "nz-input-otp.nzMask.description": "Custom display, the original value will not be modified",
  "nz-input-otp.nzLength.description": "The number of input elements",
  "nz-input-otp.nzStatus.description": "Set validation status",
  "nz-input-otp.nzSize.description": "The size of the input box",
  "nz-input-number.title": "InputNumberLegacy",
  "nz-input-number.whenToUse": "When a numeric value needs to be provided.",
  "nz-input-number.description": "",
  "nz-input-number.ngModel.description": "current value, double binding",
  "nz-input-number.nzId.description": "input id attribute inside the component",
  "nz-input-number.nzPlaceHolder.description": "Placeholder of select",
  "nz-input-number.nzAutoFocus.description": "get focus when component mounted",
  "nz-input-number.nzBordered.description": "~~whether to have border~~",
  "nz-input-number.nzVariant.description": "Variants of InputNumber",
  "nz-input-number.nzControls.description": "whether to show up and down buttons",
  "nz-input-number.nzDisabled.description": "disable the input",
  "nz-input-number.nzFormatter.description": "Specifies the format of the value presented",
  "nz-input-number.nzKeyboard.description": "Whether to enable keyboard shortcuts",
  "nz-input-number.nzMax.description": "max value",
  "nz-input-number.nzMin.description": "min value",
  "nz-input-number.nzParser.description": "Specifies the value extracted from nzFormatter",
  "nz-input-number.nzPrecision.description": "precision of input value",
  "nz-input-number.nzReadOnly.description": "If readonly the input",
  "nz-input-number.nzStatus.description": "Set validation status",
  "nz-input-number.nzSize.description": "width of input box",
  "nz-input-number.nzStep.description": "The number to which the current value is increased or decreased. It can be an integer or decimal.",
  "nz-input-number.nzOnStep.description": "callback when clicking the up and down arrows",
  "nz-input-number.nzFocus.description": "focus callback",
  "nz-input-number.nzBlur.description": "blur callback",
  "nz-input-number.ngModelChange.description": "The callback triggered when the value is changed",
  "nz-input-number.nzPrecisionMode.description": "The method for calculating the precision of input value",
  "nz-input-number.nzInputMode.description": "enumerated attribute that hints at the type of data that might be entered by the user, [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode)",
  "nz-input-number-group.title": "InputNumberLegacy",
  "nz-input-number-group.whenToUse": "When a numeric value needs to be provided.",
  "nz-input-number-group.description": "",
  "nz-input-number-group.nzAddOnAfter.description": "The label text displayed after (on the right side of) the input number field, can work with `nzAddOnBefore`",
  "nz-input-number-group.nzAddOnBefore.description": "The label text displayed before (on the left side of) the input number field, can work with `nzAddOnAfter`",
  "nz-input-number-group.nzPrefix.description": "The prefix icon for the Input Number, can work with `nzSuffix`",
  "nz-input-number-group.nzSuffix.description": "The suffix icon for the Input Number, can work with `nzPrefix`",
  "nz-input-number-group.nzPrefixIcon.description": "The prefix icon for the Input Number",
  "nz-input-number-group.nzSuffixIcon.description": "The suffix icon for the Input Number",
  "nz-input-number-group.nzSize.description": "The size of `nz-input-number-group` specifies the size of the included `nz-input-number` fields",
  "nz-input-number-group.nzStatus.description": "Set validation status",
  "nz-sider.title": "Layout",
  "nz-sider.whenToUse": "",
  "nz-sider.description": "The sidebar.",
  "nz-sider.nzBreakpoint.description": "breakpoints of the responsive layout",
  "nz-sider.nzCollapsedWidth.description": "width of the collapsed sidebar, by setting to `0` a special `trigger` will appear",
  "nz-sider.nzCollapsible.description": "whether can be collapsed",
  "nz-sider.nzCollapsed.description": "the collapsed status can be double binding",
  "nz-sider.nzReverseArrow.description": "reverse direction of arrow, for a sider that expands from the right",
  "nz-sider.nzTrigger.description": "specify the customized `trigger`, set to `null` to hide the `trigger`",
  "nz-sider.nzZeroTrigger.description": "specify the customized trigger when `nzCollapsedWidth` setting to `0`",
  "nz-sider.nzWidth.description": "width of the sidebar",
  "nz-sider.nzTheme.description": "color theme of the sidebar",
  "nz-sider.nzCollapsedChange.description": "the callback function",
  "nz-list.title": "List",
  "nz-list.whenToUse": "A list can be used to display content related to a single subject. The content can consist of multiple elements of varying type and size.",
  "nz-list.description": "",
  "nz-list.nzBordered.description": "Toggles rendering of the border around the list",
  "nz-list.nzFooter.description": "List footer renderer",
  "nz-list.nzHeader.description": "List header renderer",
  "nz-list.nzItemLayout.description": "The layout of list, default is `horizontal`, If a vertical list is desired, set the itemLayout property to `vertical`",
  "nz-list.nzLoading.description": "Shows a loading indicator while the contents of the list are being fetched",
  "nz-list.nzSize.description": "Size of list",
  "nz-list.nzSplit.description": "Toggles rendering of the split under the list item",
  "nz-list-empty.title": "List",
  "nz-list-empty.whenToUse": "A list can be used to display content related to a single subject. The content can consist of multiple elements of varying type and size.",
  "nz-list-empty.description": "Empty content component for the list.",
  "nz-list-empty.nzNoResult.description": "Empty content",
  "nz-list-header.title": "List",
  "nz-list-header.whenToUse": "A list can be used to display content related to a single subject. The content can consist of multiple elements of varying type and size.",
  "nz-list-header.description": "Header component for the list.",
  "nz-list-header.nzNoFlex.description": "Whether it's not `flex` layout rendering",
  "nz-list-footer.title": "List",
  "nz-list-footer.whenToUse": "A list can be used to display content related to a single subject. The content can consist of multiple elements of varying type and size.",
  "nz-list-footer.description": "Footer component for the list.",
  "nz-list-footer.nzNoFlex.description": "Whether it's not `flex` layout rendering",
  "nz-list-pagination.title": "List",
  "nz-list-pagination.whenToUse": "A list can be used to display content related to a single subject. The content can consist of multiple elements of varying type and size.",
  "nz-list-pagination.description": "Pagination component for the list.",
  "nz-list-pagination.nzNoFlex.description": "Whether it's not `flex` layout rendering",
  "nz-list-load-more.title": "List",
  "nz-list-load-more.whenToUse": "A list can be used to display content related to a single subject. The content can consist of multiple elements of varying type and size.",
  "nz-list-load-more.description": "Load more component for the list.",
  "nz-list-load-more.nzNoFlex.description": "Whether it's not `flex` layout rendering",
  "nz-list-item.title": "List",
  "nz-list-item.whenToUse": "A list can be used to display content related to a single subject. The content can consist of multiple elements of varying type and size.",
  "nz-list-item.description": "",
  "nz-list-item.nzNoFlex.description": "Whether it's not `flex` layout rendering",
  "nz-list-item-meta.title": "List",
  "nz-list-item-meta.whenToUse": "A list can be used to display content related to a single subject. The content can consist of multiple elements of varying type and size.",
  "nz-list-item-meta.description": "",
  "nz-list-item-meta.nzAvatar.description": "The avatar of list item",
  "nz-list-item-meta.nzDescription.description": "The description of list item",
  "nz-list-item-meta.nzTitle.description": "The title of list item",
  "nz-mention.title": "Mention",
  "nz-mention.whenToUse": "When need to mention someone or something.",
  "nz-mention.description": "",
  "nz-mention.nzMentionTrigger.description": "Trigger element **(required)**",
  "nz-mention.nzMentionSuggestion.description": "Customize the suggestion template",
  "nz-mention.nzLoading.description": "Loading mode",
  "nz-mention.nzNotFoundContent.description": "Suggestion when suggestions empty",
  "nz-mention.nzPlacement.description": "The position of the suggestion relative to the target, which can be one of top and bottom",
  "nz-mention.nzPrefix.description": "Character which will trigger Mention to show mention list",
  "nz-mention.nzSuggestions.description": "Suggestion content",
  "nz-mention.nzStatus.description": "Set validation status",
  "nz-mention.nzAllowClear.description": "If allow to remove mentions content with clear icon",
  "nz-mention.nzClearIcon.description": "The custom clear icon",
  "nz-mention.nzVariant.description": "Variants of Input",
  "nz-mention.nzValueWith.description": "Function that maps an suggestion's value",
  "nz-mention.nzOnSelect.description": "Callback function called when select from suggestions",
  "nz-mention.nzOnSearchChange.description": "Callback function called when search content changes",
  "nz-mention.nzOnClear.description": "Callback function called when click on clear button",
  "nzMentionTrigger.title": "Mention",
  "nzMentionTrigger.whenToUse": "When need to mention someone or something.",
  "nzMentionTrigger.description": "Trigger element",
  "nzMentionSuggestion.title": "Mention",
  "nzMentionSuggestion.whenToUse": "When need to mention someone or something.",
  "nzMentionSuggestion.description": "Customize the suggestion template",
  "nz-menu.title": "Menu",
  "nz-menu.whenToUse": "Navigation menu is important for a website, it helps users jump from one site section to another quickly.\nMostly, it includes top navigation and side navigation. Top navigation provides all the category and functions of the website.\nSide navigation provides the multi-level structure of the website.",
  "nz-menu.description": "",
  "nz-menu.nzInlineCollapsed.description": "specifies the collapsed status when menu is `inline` mode",
  "nz-menu.nzInlineIndent.description": "indent px of `inline` menu item on each level",
  "nz-menu.nzMode.description": "type of the menu; `vertical`、 `horizontal`, and `inline` modes are supported",
  "nz-menu.nzSelectable.description": "allow selecting menu items",
  "nz-menu.nzTheme.description": "color theme of the menu",
  "nz-menu.nzClick.description": "the Output when click `nz-menu-item` inside nz-menu",
  "nz-menu-item.title": "Menu",
  "nz-menu-item.whenToUse": "Navigation menu is important for a website, it helps users jump from one site section to another quickly.\nMostly, it includes top navigation and side navigation. Top navigation provides all the category and functions of the website.\nSide navigation provides the multi-level structure of the website.",
  "nz-menu-item.description": "",
  "nz-menu-item.nzDisabled.description": "whether menu item is disabled or not",
  "nz-menu-item.nzSelected.description": "whether menu item is selected or not",
  "nz-menu-item.nzMatchRouter.description": "whether auto set `nzSelected` according to [routerLink](https://www.angular.io/api/router/RouterLink)",
  "nz-menu-item.nzMatchRouterExact.description": "only match when the url matches the link exactly, same as [routerLinkActiveOptions](https://angular.dev/api/router/RouterLinkActive#routerLinkActiveOptions)",
  "nz-menu-item.nzDanger.description": "display the danger style",
  "nz-submenu.title": "Menu",
  "nz-submenu.whenToUse": "Navigation menu is important for a website, it helps users jump from one site section to another quickly.\nMostly, it includes top navigation and side navigation. Top navigation provides all the category and functions of the website.\nSide navigation provides the multi-level structure of the website.",
  "nz-submenu.description": "You can set the title of `[nz-submenu]` in the following ways.",
  "nz-submenu.nzPlacement.description": "placement of pop menu",
  "nz-submenu.nzOpen.description": "whether sub menu is open or not, double binding",
  "nz-submenu.nzDisabled.description": "whether sub menu is disabled or not",
  "nz-submenu.nzTitle.description": "set submenu title",
  "nz-submenu.nzIcon.description": "`icon` type in title",
  "nz-submenu.nzMenuClassName.description": "Custom the submenu container's class name",
  "nz-submenu.nzTriggerSubMenuAction.description": "Which action can trigger submenu open/close",
  "nz-submenu.nzOpenChange.description": "nzOpen callback",
  "nz-menu-group.title": "Menu",
  "nz-menu-group.whenToUse": "Navigation menu is important for a website, it helps users jump from one site section to another quickly.\nMostly, it includes top navigation and side navigation. Top navigation provides all the category and functions of the website.\nSide navigation provides the multi-level structure of the website.",
  "nz-menu-group.description": "You can set the title of `[nz-menu-group]` in the following ways.",
  "nz-menu-group.nzTitle.description": "set menu group title",
  "nz-menu-divider.title": "Menu",
  "nz-menu-divider.whenToUse": "Navigation menu is important for a website, it helps users jump from one site section to another quickly.\nMostly, it includes top navigation and side navigation. Top navigation provides all the category and functions of the website.\nSide navigation provides the multi-level structure of the website.",
  "nz-menu-divider.description": "Divider line in between menu items, only used in vertical popup Menu or Dropdown Menu.",
  "nz-modal.title": "Modal",
  "nz-modal.whenToUse": "When requiring users to interact with the application without jumping to a new page to interrupt the user's workflow,\nyou can use `Modal` to create a new floating layer over the current page for user-getting feedback or information\npurposes. Additionally, if you need to show a simple confirmation dialog, you can use `NzModalService.confirm()` and so\non.",
  "nz-modal.description": "The dialog is currently divided into 2 modes, `normal mode` and `confirm box mode` (for instance, the `Confirm` dialog,\nwhich is called by `confirm/info/success/error/warning`). The degree of API support for the two modes is slightly\ndifferent.",
  "nz-modal.nzAfterOpen.description": "Specify a EventEmitter that will be emitted when modal opened",
  "nz-modal.nzAfterClose.description": "Specify a EventEmitter that will be emitted when modal is closed completely (Can listen for parameters passed in the close/destroy method)",
  "nz-modal.nzBodyStyle.description": "Body style for modal body element. Such as height, padding etc.",
  "nz-modal.nzCancelText.description": "Text of the Cancel button. <i>Set to null to show no cancel button (this value is invalid if the nzFooter parameter is used in normal mode)</i>",
  "nz-modal.nzCentered.description": "Centered Modal",
  "nz-modal.nzClosable.description": "Whether a close (x) button is visible on top right of the modal dialog or not. <i>Invalid value in confirm box mode (default will be hidden)</i>",
  "nz-modal.nzOkLoading.description": "Whether to apply loading visual effect for OK button or not",
  "nz-modal.nzCancelLoading.description": "Whether to apply loading visual effect for Cancel button or not",
  "nz-modal.nzOkDisabled.description": "Whether to disable Ok button or not",
  "nz-modal.nzCancelDisabled.description": "Whether to disable Cancel button or not",
  "nz-modal.nzDraggable.description": "Whether modal is draggable or not",
  "nz-modal.nzFooter.description": "Footer content, set as footer=null when you don't need default buttons. <br><i>1. Only valid in normal mode.<br>2. You can customize the buttons to the maximum extent by passing a `ModalButtonOptions` configuration (see the case or the instructions below).</i>",
  "nz-modal.nzKeyboard.description": "Whether support press esc to close",
  "nz-modal.nzMask.description": "Whether show mask or not.",
  "nz-modal.nzMaskClosable.description": "Whether to close the modal dialog when the mask (area outside the modal) is clicked",
  "nz-modal.nzCloseOnNavigation.description": "Whether to close the modal when the user goes backwards/forwards in history. Note that this usually doesn't include clicking on links (unless the user is using the HashLocationStrategy).",
  "nz-modal.nzDirection.description": "Direction of the text in the modal",
  "nz-modal.nzMaskStyle.description": "Style for modal's mask element.",
  "nz-modal.nzOkText.description": "Text of the OK button. <i>Set to null to show no ok button (this value is invalid if the nzFooter parameter is used in normal mode)</i>",
  "nz-modal.nzOkType.description": "Button type of the OK button. <i>Consistent with the `nzType` of the `nz-button`.</i>",
  "nz-modal.nzOkDanger.description": "Danger status of the OK button. <i>Consistent with the `nzDanger` of the `nz-button`.</i>",
  "nz-modal.nzStyle.description": "Style of floating layer, typically used at least for adjusting the position.",
  "nz-modal.nzCloseIcon.description": "Custom close icon",
  "nz-modal.nzTitle.description": "The modal dialog's title. <i>Leave blank to show no title. The usage of TemplateRef can refer to the case</i>",
  "nz-modal.nzVisible.description": "Whether the modal dialog is visible or not. <i>When using the `<nz-modal>` tag, be sure to use two-way binding, for example: `[(nzVisible)]=\"visible\"`.</i>",
  "nz-modal.nzWidth.description": "Width of the modal dialog. <i>When using numbers, the default unit is `px`</i>",
  "nz-modal.nzClassName.description": "The class name of the modal dialog",
  "nz-modal.nzWrapClassName.description": "The class name of the container of the modal dialog",
  "nz-modal.nzZIndex.description": "The z-index of the Modal",
  "nz-modal.nzOnCancel.description": "Specify a function that will be called when a user clicks mask, close button on top right or Cancel button (If nzContent is Component, the Component instance will be put in as an argument). <i>Note: When created with `NzModalService.create`, this parameter should be passed into the type of function (callback function). This function returns a promise, which is automatically closed when the execution is complete or the promise ends (return `false` to prevent closing)</i>",
  "nz-modal.nzOnOk.description": "Specify a EventEmitter that will be emitted when a user clicks the OK button (If nzContent is Component, the Component instance will be put in as an argument). <i>Note: When created with `NzModalService.create`, this parameter should be passed into the type of function (callback function). This function returns a promise, which is automatically closed when the execution is complete or the promise ends (return `false` to prevent closing)</i>",
  "nz-modal.nzContent.description": "Content",
  "nz-modal.nzData.description": "Will be a template variable when `nzContent` is `TemplateRef`",
  "nz-modal.nzIconType.description": "Icon type of the Icon component. <i>Only valid in confirm box mode</i>",
  "nz-modal.nzAutofocus.description": "autofocus and the position，disabled when is `null`",
  "nzModalTitle.title": "Modal",
  "nzModalTitle.whenToUse": "When requiring users to interact with the application without jumping to a new page to interrupt the user's workflow,\nyou can use `Modal` to create a new floating layer over the current page for user-getting feedback or information\npurposes. Additionally, if you need to show a simple confirmation dialog, you can use `NzModalService.confirm()` and so\non.",
  "nzModalTitle.description": "Customize the title.",
  "nzModalContent.title": "Modal",
  "nzModalContent.whenToUse": "When requiring users to interact with the application without jumping to a new page to interrupt the user's workflow,\nyou can use `Modal` to create a new floating layer over the current page for user-getting feedback or information\npurposes. Additionally, if you need to show a simple confirmation dialog, you can use `NzModalService.confirm()` and so\non.",
  "nzModalContent.description": "Customize the content.",
  "nzModalFooter.title": "Modal",
  "nzModalFooter.whenToUse": "When requiring users to interact with the application without jumping to a new page to interrupt the user's workflow,\nyou can use `Modal` to create a new floating layer over the current page for user-getting feedback or information\npurposes. Additionally, if you need to show a simple confirmation dialog, you can use `NzModalService.confirm()` and so\non.",
  "nzModalFooter.description": "Customize the footer.",
  "nz-page-header.title": "PageHeader",
  "nz-page-header.whenToUse": "PageHeader can be used to highlight the page topic, display important information about the page, and carry the action items related to the current page (including page-level operations, inter-page navigation, etc.) It can also be used as inter-page navigation.",
  "nz-page-header.description": "",
  "nz-page-header.nzGhost.description": "Make background transparent",
  "nz-page-header.nzTitle.description": "Title string",
  "nz-page-header.nzSubtitle.description": "SubTitle string",
  "nz-page-header.nzBackIcon.description": "Custom back icon",
  "nz-page-header.nzBack.description": "Back icon click event",
  "nz-pagination.title": "Pagination",
  "nz-pagination.whenToUse": "- When it will take a long time to load/render all items.\n- If you want to browse the data by navigating through pages.",
  "nz-pagination.description": "",
  "nz-pagination.nzTotal.description": "total number of data items",
  "nz-pagination.nzPageIndex.description": "current page number，double binding",
  "nz-pagination.nzPageSize.description": "number of data items per page, double binding",
  "nz-pagination.nzDisabled.description": "disable pagination",
  "nz-pagination.nzShowQuickJumper.description": "determine whether you can jump to pages directly",
  "nz-pagination.nzShowSizeChanger.description": "determine whether `nzPageSize` can be changed",
  "nz-pagination.nzSimple.description": "whether to use simple mode",
  "nz-pagination.nzSize.description": "specify the size of `nz-pagination`",
  "nz-pagination.nzResponsive.description": "`Pagination` would resize according to the width of the window",
  "nz-pagination.nzPageSizeOptions.description": "specify the sizeChanger options",
  "nz-pagination.nzItemRender.description": "to customize item",
  "nz-pagination.nzShowTotal.description": "to display the total number and range",
  "nz-pagination.nzHideOnSinglePage.description": "Whether to hide pager on single page",
  "nz-pagination.nzPageIndexChange.description": "current page number change callback",
  "nz-pagination.nzPageSizeChange.description": "number of data items per page change callback",
  "nzBytes.title": "Pipes",
  "nzBytes.whenToUse": "After importing Pipe, use it like Angular's built-in Pipe",
  "nzBytes.description": "",
  "nzBytes.decimal.description": "Decimal",
  "nzBytes.from.description": "Unit of current value",
  "nzBytes.to.description": "Units converted to target value",
  "nzToCssUnit.title": "Pipes",
  "nzToCssUnit.whenToUse": "After importing Pipe, use it like Angular's built-in Pipe",
  "nzToCssUnit.description": "",
  "nzToCssUnit.defaultUnit.description": "Default Unit",
  "nzEllipsis.title": "Pipes",
  "nzEllipsis.whenToUse": "After importing Pipe, use it like Angular's built-in Pipe",
  "nzEllipsis.description": "",
  "nzEllipsis.length.description": "Truncate length",
  "nzEllipsis.suffix.description": "Replace character",
  "nzAggregate.title": "Pipes",
  "nzAggregate.whenToUse": "After importing Pipe, use it like Angular's built-in Pipe",
  "nzAggregate.description": "",
  "nzAggregate.method.description": "Aggregation",
  "nzSanitizer.title": "Pipes",
  "nzSanitizer.whenToUse": "After importing Pipe, use it like Angular's built-in Pipe",
  "nzSanitizer.description": "",
  "nzSanitizer.type.description": "sanitizer type",
  "nz-popconfirm.title": "Popconfirm",
  "nz-popconfirm.whenToUse": "A simple and compact dialog is used for asking for user confirmation.",
  "nz-popconfirm.description": "",
  "nz-popconfirm.nzTooltipArrowPointAtCenter.description": "Arrow point at center of the origin",
  "nz-popconfirm.nzTooltipTitle.description": "The text shown in the tooltip",
  "nz-popconfirm.nzTooltipTitleContext.description": "The context of tooltip title",
  "nz-popconfirm.nzTooltipTrigger.description": "Tooltip trigger mode. If set to `null` it would not be triggered",
  "nz-popconfirm.nzTooltipPlacement.description": "The position of the tooltip relative to the target",
  "nz-popconfirm.nzTooltipColor.description": "The background color",
  "nz-popconfirm.nzTooltipOrigin.description": "Origin of the tooltip",
  "nz-popconfirm.nzTooltipVisible.description": "Show or hide tooltip",
  "nz-popconfirm.nzTooltipVisibleChange.description": "Callback of hide or show",
  "nz-popconfirm.nzTooltipMouseEnterDelay.description": "Delay in seconds, before tooltip is shown on mouse enter",
  "nz-popconfirm.nzTooltipMouseLeaveDelay.description": "Delay in seconds, before tooltip is hidden on mouse leave",
  "nz-popconfirm.nzTooltipOverlayClassName.description": "Class name of the tooltip card",
  "nz-popconfirm.nzTooltipOverlayStyle.description": "Style of the tooltip card",
  "nz-popconfirm.nzPopconfirmArrowPointAtCenter.description": "Arrow point at center of the origin",
  "nz-popconfirm.nzPopconfirmTitle.description": "Title of the confirmation box",
  "nz-popconfirm.nzPopconfirmTitleContext.description": "The context of confirmation box title",
  "nz-popconfirm.nzPopconfirmTrigger.description": "Popconfirm trigger mode. If set to `null` it would not be triggered",
  "nz-popconfirm.nzPopconfirmPlacement.description": "The position of the popconfirm relative to the target",
  "nz-popconfirm.nzPopconfirmOrigin.description": "Origin of the popconfirm",
  "nz-popconfirm.nzPopconfirmVisible.description": "Show or hide popconfirm",
  "nz-popconfirm.nzPopconfirmShowArrow.description": "Whether popconfirm has arrow",
  "nz-popconfirm.nzPopconfirmVisibleChange.description": "Callback of hide or show",
  "nz-popconfirm.nzPopconfirmMouseEnterDelay.description": "Delay in seconds, before popconfirm is shown on mouse enter",
  "nz-popconfirm.nzPopconfirmMouseLeaveDelay.description": "Delay in seconds, before popconfirm is hidden on mouse leave",
  "nz-popconfirm.nzPopconfirmOverlayClassName.description": "Class name of the popconfirm card",
  "nz-popconfirm.nzPopconfirmOverlayStyle.description": "Style of the popconfirm card",
  "nz-popconfirm.nzPopconfirmBackdrop.description": "whether or not the overlay should attach a backdrop",
  "nz-popconfirm.nzOkButtonProps.description": "config object of the ok button",
  "nz-popconfirm.nzCancelButtonProps.description": "config object of the cancel button",
  "nz-popconfirm.nzCondition.description": "Whether to directly emit `onConfirm` without showing Popconfirm",
  "nz-popconfirm.nzIcon.description": "Customize icon of confirmation",
  "nz-popconfirm.nzAutoFocus.description": "Autofocus a button",
  "nz-popconfirm.nzBeforeConfirm.description": "The hook before the confirmation operation, decides whether to continue responding to the `nzOnConfirm` callback, supports asynchronous verification.",
  "nz-popconfirm.nzOnCancel.description": "Callback of cancel",
  "nz-popconfirm.nzOnConfirm.description": "Callback of confirmation",
  "nz-popover.title": "Popover",
  "nz-popover.whenToUse": "A simple popup menu to provide extra information or operations.",
  "nz-popover.description": "",
  "nz-popover.nzTooltipArrowPointAtCenter.description": "Arrow point at center of the origin",
  "nz-popover.nzTooltipTitle.description": "The text shown in the tooltip",
  "nz-popover.nzTooltipTitleContext.description": "The context of tooltip title",
  "nz-popover.nzTooltipTrigger.description": "Tooltip trigger mode. If set to `null` it would not be triggered",
  "nz-popover.nzTooltipPlacement.description": "The position of the tooltip relative to the target",
  "nz-popover.nzTooltipColor.description": "The background color",
  "nz-popover.nzTooltipOrigin.description": "Origin of the tooltip",
  "nz-popover.nzTooltipVisible.description": "Show or hide tooltip",
  "nz-popover.nzTooltipVisibleChange.description": "Callback of hide or show",
  "nz-popover.nzTooltipMouseEnterDelay.description": "Delay in seconds, before tooltip is shown on mouse enter",
  "nz-popover.nzTooltipMouseLeaveDelay.description": "Delay in seconds, before tooltip is hidden on mouse leave",
  "nz-popover.nzTooltipOverlayClassName.description": "Class name of the tooltip card",
  "nz-popover.nzTooltipOverlayStyle.description": "Style of the tooltip card",
  "nz-popover.nzPopoverArrowPointAtCenter.description": "Arrow point at center of the origin",
  "nz-popover.nzPopoverTitle.description": "Title of the popover",
  "nz-popover.nzPopoverTitleContext.description": "The context of Title",
  "nz-popover.nzPopoverContent.description": "Content of the popover",
  "nz-popover.nzPopoverContentContext.description": "The context of Content",
  "nz-popover.nzPopoverTrigger.description": "Popover trigger mode. If set to `null` it would not be triggered",
  "nz-popover.nzPopoverPlacement.description": "The position of the popover relative to the target",
  "nz-popover.nzPopoverOrigin.description": "Origin of the tooltip",
  "nz-popover.nzPopoverVisible.description": "Show or hide popover",
  "nz-popover.nzPopoverVisibleChange.description": "Callback of hide or show",
  "nz-popover.nzPopoverMouseEnterDelay.description": "Delay in seconds, before popover is shown on mouse enter",
  "nz-popover.nzPopoverMouseLeaveDelay.description": "Delay in seconds, before popover is hidden on mouse leave",
  "nz-popover.nzPopoverOverlayClassName.description": "Class name of the popover card",
  "nz-popover.nzPopoverOverlayStyle.description": "Style of the popover card",
  "nz-popover.nzPopoverOverlayClickable.description": "Click the mask to close the bubble box. Only the `click` trigger behavior is valid",
  "nz-progress.title": "Progress",
  "nz-progress.whenToUse": "If it will take a long time to complete an operation, you can use `Progress` to show the current progress and status.",
  "nz-progress.description": "",
  "nz-progress.nzType.description": "to set the type",
  "nz-progress.nzFormat.description": "template function of the content",
  "nz-progress.nzPercent.description": "to set the completion percentage",
  "nz-progress.nzShowInfo.description": "whether to display the progress value and the status icon",
  "nz-progress.nzStatus.description": "to set the status of the Progress",
  "nz-progress.nzStrokeLinecap.description": "to set the style of the progress linecap",
  "nz-progress.nzStrokeColor.description": "color of progress bar, render linear-gradient when passing an object",
  "nz-progress.nzSuccessPercent.description": "segmented success percent",
  "nz-progress.nzStrokeWidth.description": "to set the width of the dashboard progress bar, unit: percentage of the canvas width",
  "nz-progress.nzSteps.description": "the total step count",
  "nz-progress.nzWidth.description": "to set the canvas width of the dashboard progress bar, unit: `px`",
  "nz-progress.nzGapDegree.description": "the gap degree of half circle, 0 ~ 360",
  "nz-progress.nzGapPosition.description": "the gap position",
  "nz-qrcode.title": "QRCode",
  "nz-qrcode.whenToUse": "Used when the text needs to be converted into a QR Code.",
  "nz-qrcode.description": "",
  "nz-qrcode.nzValue.description": "scanned text",
  "nz-qrcode.nzColor.description": "QR code Color",
  "nz-qrcode.nzBgColor.description": "QR code background color",
  "nz-qrcode.nzSize.description": "QR code Size",
  "nz-qrcode.nzPadding.description": "QR code Padding",
  "nz-qrcode.nzIcon.description": "Icon address in QR code",
  "nz-qrcode.nzIconSize.description": "The size of the icon in the QR code",
  "nz-qrcode.nzBordered.description": "Whether has border style",
  "nz-qrcode.nzStatus.description": "QR code status",
  "nz-qrcode.nzStatusRender.description": "custom status",
  "nz-qrcode.nzLevel.description": "Error Code Level",
  "nz-qrcode.nzRefresh.description": "callback",
  "nz-radio.title": "Radio",
  "nz-radio.whenToUse": "- Used to select a single state in multiple options.\n- The difference from Select is that Radio is visible to the user and can facilitate the comparison of choice, which means there shouldn't be too many of them.",
  "nz-radio.description": "",
  "nz-radio.nzAutoFocus.description": "get focus when component mounted",
  "nz-radio.nzDisabled.description": "Disable radio",
  "nz-radio.ngModel.description": "Specifies whether the radio is selected, double binding",
  "nz-radio.nzValue.description": "use with `nz-radio-group`",
  "nz-radio.ngModelChange.description": "The callback function that is triggered when the state changes.",
  "nz-radio-button.title": "Radio",
  "nz-radio-button.whenToUse": "- Used to select a single state in multiple options.\n- The difference from Select is that Radio is visible to the user and can facilitate the comparison of choice, which means there shouldn't be too many of them.",
  "nz-radio-button.description": "",
  "nz-radio-button.nzAutoFocus.description": "get focus when component mounted",
  "nz-radio-button.nzDisabled.description": "Disable radio",
  "nz-radio-button.ngModel.description": "Specifies whether the radio is selected, double binding",
  "nz-radio-button.nzValue.description": "use with `nz-radio-group`",
  "nz-radio-button.ngModelChange.description": "The callback function that is triggered when the state changes.",
  "nz-radio-group.title": "Radio",
  "nz-radio-group.whenToUse": "- Used to select a single state in multiple options.\n- The difference from Select is that Radio is visible to the user and can facilitate the comparison of choice, which means there shouldn't be too many of them.",
  "nz-radio-group.description": "radio group，wrap a group of `nz-radio`。",
  "nz-radio-group.ngModel.description": "current selected `nz-radio` value, double binding",
  "nz-radio-group.nzName.description": "The `name` property of all `input[type=\"radio\"]` children",
  "nz-radio-group.nzDisabled.description": "Disable all radio buttons",
  "nz-radio-group.nzSize.description": "Size, only on radio style",
  "nz-radio-group.ngModelChange.description": "the callback function when current selected `nz-radio` value change",
  "nz-radio-group.nzButtonStyle.description": "style type of radio button",
  "nz-rate.title": "Rate",
  "nz-rate.whenToUse": "- Show evaluation.\n- A quick rating operation on something.",
  "nz-rate.description": "",
  "nz-rate.nzAllowClear.description": "whether to allow clear when click again",
  "nz-rate.nzAllowHalf.description": "whether to allow semi selection",
  "nz-rate.nzAutoFocus.description": "get focus when component mounted",
  "nz-rate.nzCharacter.description": "custom character of rate",
  "nz-rate.nzCount.description": "star count",
  "nz-rate.nzDisabled.description": "read only, unable to interact",
  "nz-rate.nzTooltips.description": "Customize tooltip by each character",
  "nz-rate.ngModel.description": "current value , double binding",
  "nz-rate.ngModelChange.description": "callback when select value",
  "nz-rate.nzOnBlur.description": "callback when component lose focus",
  "nz-rate.nzOnFocus.description": "callback when component get focus",
  "nz-rate.nzOnHoverChange.description": "callback when hover / leave item",
  "nz-rate.nzOnKeyDown.description": "callback when keydown on component",
  "nz-resizable.title": "Resizable",
  "nz-resizable.whenToUse": "When you want to resize elements.",
  "nz-resizable.description": "Resizable element the `position` attribute must be one of `'relative' | 'absolute' | 'fixed' |'sticky'`，default is `'relative'`.",
  "nz-resizable.nzBounds.description": "Specifies resize boundaries.",
  "nz-resizable.nzMaxHeight.description": "Maximum height of resizable element",
  "nz-resizable.nzMaxWidth.description": "Maximum width of resizable element",
  "nz-resizable.nzMinHeight.description": "Minimum height of resizable element",
  "nz-resizable.nzMinWidth.description": "Minimum width of resizable element",
  "nz-resizable.nzGridColumnCount.description": "Number of columns(-1 is not grid)",
  "nz-resizable.nzMaxColumn.description": "Maximum Column",
  "nz-resizable.nzMinColumn.description": "Minimum Column",
  "nz-resizable.nzLockAspectRatio.description": "Lock the aspect ratio based on the initial size",
  "nz-resizable.nzPreview.description": "Enable preview when resizing",
  "nz-resizable.nzDisabled.description": "Disable resize",
  "nz-resizable.nzResize.description": "Calls when Resizing",
  "nz-resizable.nzResizeStart.description": "Calls when resize start",
  "nz-resizable.nzResizeEnd.description": "Calls when resize end",
  "nz-resize-handle.title": "Resizable",
  "nz-resize-handle.whenToUse": "When you want to resize elements.",
  "nz-resize-handle.description": "Define handles and directions.",
  "nz-resize-handle.nzDirection.description": "Set the direction of resizable",
  "nz-resize-handle.nzCursorType.description": "Cursor type for handle",
  "nz-resize-handles.title": "Resizable",
  "nz-resize-handles.whenToUse": "When you want to resize elements.",
  "nz-resize-handles.description": "Simpler way to define handles.",
  "nz-resize-handles.nzDirections.description": "Allow handle directions or handle options",
  "nz-result.title": "Result",
  "nz-result.whenToUse": "Use when important operations need to inform the user to process the results and the feedback is more complicated.",
  "nz-result.description": "",
  "nz-result.nzTitle.description": "title",
  "nz-result.nzSubTitle.description": "subTitle",
  "nz-result.nzStatus.description": "result status, decides icons and colors",
  "nz-result.nzIcon.description": "custom icon",
  "nz-result.nzExtra.description": "operating area",
  "nz-segmented.title": "Segmented",
  "nz-segmented.whenToUse": "- When displaying multiple options and user can select a single option;\n- When switching the selected option, the content of the associated area changes.",
  "nz-segmented.description": "",
  "nz-segmented.nzBlock.description": "Option to fit width to its parent\\'s width",
  "nz-segmented.nzDisabled.description": "Disable all segments",
  "nz-segmented.nzOptions.description": "Set children optional",
  "nz-segmented.nzSize.description": "The size of the Segmented",
  "nz-segmented.nzShape.description": "Shape of Segmented",
  "nz-segmented.nzVertical.description": "Orientation",
  "nz-segmented.nzName.description": "The name property of all `input[type=\"radio\"]` children",
  "nz-segmented.ngModel.description": "Value of the currently selected option",
  "nz-segmented.nzValueChange.description": "Emits when value of the currently selected option changes",
  "nz-segmented.ngModelChange.description": "Emits when value of the currently selected option changes",
  "nz-select.title": "Select",
  "nz-select.whenToUse": "- A dropdown menu for displaying choices - an elegant alternative to the native `<select>` element.\n- Utilizing [Radio](/components/radio/en) is recommended when there are fewer total options (less than 5).\n- You probably need [AutoComplete](/components/auto-complete) if you're looking for an input box that can be typed or selected.",
  "nz-select.description": "",
  "nz-select.nzId.description": "input id attribute inside the component",
  "nz-select.ngModel.description": "Current selected nz-option value, double binding.",
  "nz-select.compareWith.description": "Same as [SelectControlValueAccessor](https://angular.dev/api/forms/SelectControlValueAccessor)",
  "nz-select.nzAutoClearSearchValue.description": "Whether the current search will be cleared on selecting an item. Only applies when `mode` is set to `multiple` or `tags`.",
  "nz-select.nzAllowClear.description": "Show clear button.",
  "nz-select.nzBackdrop.description": "whether or not the overlay should attach a backdrop",
  "nz-select.nzBorderless.description": "~~whether has borderless style~~",
  "nz-select.nzVariant.description": "Variants of Select",
  "nz-select.nzOpen.description": "dropdown expand state, double binding",
  "nz-select.nzAutoFocus.description": "Get focus by default",
  "nz-select.nzDisabled.description": "Whether disabled select",
  "nz-select.nzDropdownClassName.description": "className of dropdown menu",
  "nz-select.nzDropdownMatchSelectWidth.description": "Whether dropdown's width is same width than select.",
  "nz-select.nzDropdownStyle.description": "style of dropdown menu",
  "nz-select.nzCustomTemplate.description": "The custom template of select",
  "nz-select.nzServerSearch.description": "nz-option will not be filtered when set to true",
  "nz-select.nzFilterOption.description": "Filter options against it. The function will receive two arguments, `inputValue` and `option`, if the function returns `true`, the option will be included in the filtered set; Otherwise, it will be excluded.",
  "nz-select.nzMaxMultipleCount.description": "Max selected option can be selected",
  "nz-select.nzMode.description": "Set mode of Select",
  "nz-select.nzNotFoundContent.description": "Specify content to show when no result matches..",
  "nz-select.nzPlaceHolder.description": "Placeholder of select",
  "nz-select.nzShowArrow.description": "Whether to show the drop-down arrow",
  "nz-select.nzShowSearch.description": "Whether show search input in single mode.",
  "nz-select.nzSize.description": "Size of Select input",
  "nz-select.nzStatus.description": "Set validation status",
  "nz-select.nzPrefix.description": "The custom prefix",
  "nz-select.nzSuffixIcon.description": "The custom suffix icon",
  "nz-select.nzRemoveIcon.description": "The custom remove icon",
  "nz-select.nzClearIcon.description": "The custom clear icon",
  "nz-select.nzMenuItemSelectedIcon.description": "The custom menuItemSelected icon",
  "nz-select.nzTokenSeparators.description": "Separator used to tokenize on tag/multiple mode",
  "nz-select.nzLoading.description": "indicate loading state",
  "nz-select.nzMaxTagCount.description": "Max tag count to show",
  "nz-select.nzOptions.description": "use nzOptions or `nz-option` to pass options to the select",
  "nz-select.nzMaxTagPlaceholder.description": "Placeholder for not showing tags",
  "nz-select.nzOptionHeightPx.description": "Each option height inside the dropdown",
  "nz-select.nzOptionOverflowSize.description": "Max option size inside the dropdown, overflow when exceed the size",
  "nz-select.nzSelectOnTab.description": "Allows to select an item with TAB key",
  "nz-select.ngModelChange.description": "Current selected nz-option value change callback.",
  "nz-select.nzOpenChange.description": "dropdown expand change callback",
  "nz-select.nzScrollToBottom.description": "Called when dropdown scrolls to bottom",
  "nz-select.nzOnSearch.description": "Callback function that is fired when input changed.",
  "nz-select.nzOnClear.description": "Callback function that clear the selected items",
  "nz-select.nzFocus.description": "focus callback",
  "nz-select.nzBlur.description": "blur callback",
  "nz-option.title": "Select",
  "nz-option.whenToUse": "- A dropdown menu for displaying choices - an elegant alternative to the native `<select>` element.\n- Utilizing [Radio](/components/radio/en) is recommended when there are fewer total options (less than 5).\n- You probably need [AutoComplete](/components/auto-complete) if you're looking for an input box that can be typed or selected.",
  "nz-option.description": "",
  "nz-option.nzDisabled.description": "Disable this option",
  "nz-option.nzTitle.description": "Native title hint on this option",
  "nz-option.nzLabel.description": "The text show in nz-select and dropdown menu",
  "nz-option.nzValue.description": "The value passed to ngModel of nz-select",
  "nz-option.nzKey.description": "Should be passed when typeof nzValue - Object. Key will be used for performance optimizations",
  "nz-option.nzHide.description": "Whether hide the option in the option list",
  "nz-option.nzCustomContent.description": "Whether custom nz-option content in dropdown menu, the ng-content in nz-option will replace nzLabel when it was set to true",
  "nz-option-group.title": "Select",
  "nz-option-group.whenToUse": "- A dropdown menu for displaying choices - an elegant alternative to the native `<select>` element.\n- Utilizing [Radio](/components/radio/en) is recommended when there are fewer total options (less than 5).\n- You probably need [AutoComplete](/components/auto-complete) if you're looking for an input box that can be typed or selected.",
  "nz-option-group.description": "",
  "nz-option-group.nzLabel.description": "Group label",
  "nz-skeleton.title": "Skeleton",
  "nz-skeleton.whenToUse": "- When resource needs long time loading, like low network speed.\n- The component contains information, such as a List or Card.\n- Only works when loading data for the first time.\n- Could be replaced by Spin in any situation but can provide a better user experience.",
  "nz-skeleton.description": "",
  "nz-skeleton.nzActive.description": "Show animation effect",
  "nz-skeleton.nzAvatar.description": "Show avatar placeholder",
  "nz-skeleton.nzLoading.description": "Display the skeleton when `true`",
  "nz-skeleton.nzParagraph.description": "Show the paragraph placeholder",
  "nz-skeleton.nzTitle.description": "Show the title placeholder",
  "nz-skeleton.nzRound.description": "Show the paragraph and the title radius when `true`",
  "nz-skeleton.size.description": "Set the avatar size",
  "nz-skeleton.shape.description": "Set the avatar shape",
  "nz-skeleton.rows.description": "Set the row count of the paragraph",
  "nz-skeleton.width.description": "Set the title width",
  "nz-slider.title": "Slider",
  "nz-slider.whenToUse": "To input a value in a range.",
  "nz-slider.description": "",
  "nz-slider.nzDisabled.description": "If true, the slider will not be interactable.",
  "nz-slider.nzDots.description": "Whether the thumb can drag over tick only.",
  "nz-slider.nzIncluded.description": "Make effect when `marks` not null，`true` means containment and `false` means coordinative",
  "nz-slider.nzMarks.description": "Tick mark of Slider, type of key must be `number`, and must in closed interval `[min, max]` ，each mark can declare its own style.",
  "nz-slider.nzMax.description": "The maximum value the slider can slide to",
  "nz-slider.nzMin.description": "The minimum value the slider can slide to.",
  "nz-slider.nzRange.description": "dual thumb mode",
  "nz-slider.nzStep.description": "The granularity the slider can step through values. Must greater than 0, and be divided by (max - min) . When `marks` no null, `step` can be `null`.",
  "nz-slider.nzTipFormatter.description": "Slider will pass its value to `tipFormatter`, and display its value in Tooltip, and hide Tooltip when return value is null.",
  "nz-slider.ngModel.description": "The value of slider. When `range` is `false`, use `number`, otherwise, use `[number, number]`",
  "nz-slider.nzVertical.description": "If true, the slider will be vertical.",
  "nz-slider.nzReverse.description": "Reverse the component",
  "nz-slider.nzTooltipVisible.description": "When set to `always` tooltips are always displayed. When set to `never` they are never displayed",
  "nz-slider.nzTooltipPlacement.description": "Set the default placement of Tooltip",
  "nz-slider.nzOnAfterChange.description": "Fire when `onmouseup` is fired.",
  "nz-slider.ngModelChange.description": "Callback function that is fired when the user changes the slider's value.",
  "nz-space.title": "Space",
  "nz-space.whenToUse": "- Avoid components clinging together and set a unified space.\n- Use `<nz-space-compact>` when child form components are compactly connected and the border is collapsed.",
  "nz-space.description": "",
  "nz-space.nzSize.description": "The space size",
  "nz-space.nzDirection.description": "The space direction",
  "nz-space.nzAlign.description": "Align items",
  "nz-space.nzWrap.description": "Auto wrap line, when `horizontal` effective",
  "nz-space.nzSplit.description": "Set split",
  "nz-space-compact.title": "Space",
  "nz-space-compact.whenToUse": "- Avoid components clinging together and set a unified space.\n- Use `<nz-space-compact>` when child form components are compactly connected and the border is collapsed.",
  "nz-space-compact.description": "Use `<nz-space-compact>` when child form components are compactly connected and the border is collapsed. The supported components are：",
  "nz-space-compact.nzBlock.description": "Option to fit width to its parent\\'s width",
  "nz-space-compact.nzDirection.description": "Set direction of layout",
  "nz-space-compact.nzSize.description": "Set child component size",
  "nz-spin.title": "Spin",
  "nz-spin.whenToUse": "When part of the page is waiting for asynchronous data or during a rendering process, an appropriate loading animation can effectively alleviate users' inquietude.",
  "nz-spin.description": "",
  "nz-spin.nzDelay.description": "specifies a delay in milliseconds for loading state (prevent flush), unit: milliseconds",
  "nz-spin.nzIndicator.description": "the spinning indicator",
  "nz-spin.nzSize.description": "size of Spin",
  "nz-spin.nzSpinning.description": "whether Spin is spinning",
  "nz-spin.nzSimple.description": "whether Spin has no children",
  "nz-spin.nzTip.description": "customize description content when Spin has children",
  "nz-splitter.title": "Splitter",
  "nz-splitter.whenToUse": "The Splitter component can be used to separate areas horizontally or vertically.\nYou can freely drag the splitter to adjust the size of each side, while also being able to specify its minimum and\nmaximum width and height.",
  "nz-splitter.description": "",
  "nz-splitter.nzLayout.description": "Layout direction",
  "nz-splitter.nzLazy.description": "Lazy Mode",
  "nz-splitter.nzResizeStart.description": "Callback before dragging starts",
  "nz-splitter.nzResize.description": "Panel size change callback",
  "nz-splitter.nzResizeEnd.description": "Drag end callback",
  "nz-splitter-panel.title": "Splitter",
  "nz-splitter-panel.whenToUse": "The Splitter component can be used to separate areas horizontally or vertically.\nYou can freely drag the splitter to adjust the size of each side, while also being able to specify its minimum and\nmaximum width and height.",
  "nz-splitter-panel.description": "",
  "nz-splitter-panel.nzDefaultSize.description": "Initial panel size support number for px or 'percent%' usage",
  "nz-splitter-panel.nzMin.description": "Minimum threshold support number for px or 'percent%' usage",
  "nz-splitter-panel.nzMax.description": "Maximum threshold support number for px or 'percent%' usage",
  "nz-splitter-panel.nzSize.description": "Controlled panel size support number for px or 'percent%' usage",
  "nz-splitter-panel.nzCollapsible.description": "Quick folding",
  "nz-splitter-panel.nzResizable.description": "Whether to enable drag and drop",
  "nz-statistic.title": "Statistic",
  "nz-statistic.whenToUse": "- When want to highlight some data.\n- When want to display statistic data with description.",
  "nz-statistic.description": "",
  "nz-statistic.nzPrefix.description": "Prefix of Value",
  "nz-statistic.nzSuffix.description": "Suffix of Value",
  "nz-statistic.nzTitle.description": "Title",
  "nz-statistic.nzValue.description": "Value",
  "nz-statistic.nzValueStyle.description": "Value CSS style",
  "nz-statistic.nzValueTemplate.description": "Custom template to render a number",
  "nz-statistic.nzLoading.description": "Loading status of Statistic",
  "nz-countdown.title": "Statistic",
  "nz-countdown.whenToUse": "- When want to highlight some data.\n- When want to display statistic data with description.",
  "nz-countdown.description": "",
  "nz-countdown.nzFormat.description": "Format string",
  "nz-countdown.nzPrefix.description": "Prefix of Value",
  "nz-countdown.nzSuffix.description": "Suffix of Value",
  "nz-countdown.nzTitle.description": "Title",
  "nz-countdown.nzValue.description": "Target time in timestamp form",
  "nz-countdown.nzValueTemplate.description": "Custom template to render a time",
  "nz-countdown.nzCountdownFinish.description": "Emit when countdown finishes",
  "nzFormat.title": "Statistic",
  "nzFormat.whenToUse": "- When want to highlight some data.\n- When want to display statistic data with description.",
  "nzFormat.description": "",
  "nz-steps.title": "Steps",
  "nz-steps.whenToUse": "When a given task is complicated or has a certain sequence in the series of subtasks, we can decompose it into several steps to make things easier.",
  "nz-steps.description": "The whole of the step bar.",
  "nz-steps.nzType.description": "type of steps, can be set to one of the following values: `default`, `navigation`",
  "nz-steps.nzCurrent.description": "To set the current step, counting from 0. You can overwrite this state by using `nzStatus` of `nz-step`",
  "nz-steps.nzDirection.description": "To specify the direction of the step bar, `horizontal` and `vertical` are currently supported",
  "nz-steps.nzLabelPlacement.description": "Support vertical title and description",
  "nz-steps.nzProgressDot.description": "Steps with progress dot style, customize the progress dot by setting it with TemplateRef",
  "nz-steps.nzSize.description": "To specify the size of the step bar, `default` and `small` are currently supported",
  "nz-steps.nzStatus.description": "To specify the status of current step, can be set to one of the following values: `wait` `process` `finish` `error`",
  "nz-steps.nzStartIndex.description": "To specify the starting number",
  "nz-steps.nzIndexChange.description": "Trigger event when step click",
  "nz-step.title": "Steps",
  "nz-step.whenToUse": "When a given task is complicated or has a certain sequence in the series of subtasks, we can decompose it into several steps to make things easier.",
  "nz-step.description": "A single step in the step bar.",
  "nz-step.nzDescription.description": "description of the step, optional property",
  "nz-step.nzIcon.description": "icon of the step, optional property",
  "nz-step.nzStatus.description": "to specify the status. It will be automatically set by `nzCurrent` of `nz-steps` if not configured. Optional values are: `wait` `process` `finish` `error`",
  "nz-step.nzTitle.description": "title of the step",
  "nz-step.nzSubtitle.description": "subTitle of the step",
  "nz-step.nzDisabled.description": "disable click",
  "nz-step.nzPercentage.description": "Progress percentage of the step in `process` status (only works on basic Steps)",
  "nz-switch.title": "Switch",
  "nz-switch.whenToUse": "- If you need to represent the switching between two states or on-off state.\n- The difference between `Switch` and `Checkbox` is that `Switch` will trigger a state change directly when you toggle it, while `Checkbox` is generally used for state marking, which should work in conjunction with submit operation.",
  "nz-switch.description": "",
  "nz-switch.nzId.description": "button id attribute inside the component",
  "nz-switch.ngModel.description": "determine whether the `nz-switch` is checked, double binding",
  "nz-switch.nzCheckedChildren.description": "content to be shown when the state is checked",
  "nz-switch.nzUnCheckedChildren.description": "content to be shown when the state is unchecked",
  "nz-switch.nzDisabled.description": "Disable switch",
  "nz-switch.nzSize.description": "the size of the `nz-switch`, options: `default` `small`",
  "nz-switch.nzLoading.description": "loading state of switch",
  "nz-switch.nzControl.description": "determine whether fully control state by user",
  "nz-switch.ngModelChange.description": "a callback function, can be executed when the checked state is changing",
  "nz-table.title": "Table",
  "nz-table.whenToUse": "- To display a collection of structured data.\n- To sort, search, paginate and filter data.",
  "nz-table.description": "",
  "nz-table.nzData.description": "Data record array to be rendered",
  "nz-table.nzFrontPagination.description": "Whether to paginate data on client. Should be set to `false` if data is to be paginated on server side or if all the data is to be displayed at once in the table without any pagination",
  "nz-table.nzTotal.description": "Total data count. Should set when `nzFrontPagination` is `false`",
  "nz-table.nzCustomColumn.description": "Control the display and sorting of table columns, (after enabling `nzWidthConfig` and `[nzWidth]` of `th` will not take effect)",
  "nz-table.nzPageIndex.description": "pageIndex , double binding",
  "nz-table.nzPageSize.description": "pageSize, double binding",
  "nz-table.nzShowPagination.description": "Whether to show pagination component at bottom of the table",
  "nz-table.nzPaginationPosition.description": "Specify the position of pagination",
  "nz-table.nzPaginationType.description": "Specify the size of pagination",
  "nz-table.nzBordered.description": "Whether to show all table borders",
  "nz-table.nzOuterBordered.description": "Whether to show table outer borders",
  "nz-table.nzWidthConfig.description": "Set col width can not used with `[nzWidth]` of `th`",
  "nz-table.nzSize.description": "Size of table",
  "nz-table.nzLoading.description": "Loading status of table",
  "nz-table.nzLoadingIndicator.description": "The loading indicator",
  "nz-table.nzLoadingDelay.description": "Specifies a delay in milliseconds for loading state (prevents flush)",
  "nz-table.nzScroll.description": "Whether table can be scrolled in x/y direction. `x` or `y` can be a string that indicates the width and height of table body",
  "nz-table.nzTitle.description": "Table title renderer",
  "nz-table.nzFooter.description": "Table footer renderer",
  "nz-table.nzNoResult.description": "Custom no result content",
  "nz-table.nzPageSizeOptions.description": "Specify the sizeChanger options",
  "nz-table.nzShowQuickJumper.description": "Determine whether you can jump to pages directly",
  "nz-table.nzShowSizeChanger.description": "Determine whether `nzPageSize` can be changed",
  "nz-table.nzShowTotal.description": "To display Pagination total number and range, same as Pagination",
  "nz-table.nzItemRender.description": "To customize Pagination item, same as Pagination",
  "nz-table.nzHideOnSinglePage.description": "Whether to hide pagination on single page",
  "nz-table.nzSimple.description": "Whether to use simple mode",
  "nz-table.nzTemplateMode.description": "Template mode，no need to pass data to `nzData`",
  "nz-table.nzVirtualItemSize.description": "The size of the items in the list, same as [cdk itemSize](https://material.angular.io/cdk/scrolling/api)",
  "nz-table.nzVirtualMaxBufferPx.description": "The number of pixels worth of buffer to render for when rendering new items, same as [cdk maxBufferPx](https://material.angular.io/cdk/scrolling/api)",
  "nz-table.nzVirtualMinBufferPx.description": "The minimum amount of buffer rendered beyond the viewport (in pixels),same as [cdk minBufferPx](https://material.angular.io/cdk/scrolling/api)",
  "nz-table.nzVirtualForTrackBy.description": "The TrackByFunction to be used for tracking changes.",
  "nz-table.noDataVirtualHeight.description": "Height of inner scroll when having no data, if nothing is passed the default value is used.",
  "nz-table.nzPageIndexChange.description": "Callback when `pageIndex` changes",
  "nz-table.nzPageSizeChange.description": "Callback when `pageSize` changes",
  "nz-table.nzCurrentPageDataChange.description": "Callback when current pageData changes",
  "nz-table.nzCustomColumnChange.description": "Callback when the table is reordered",
  "nz-table.nzQueryParams.description": "Callback with params when working with server side pagination, sorting and filtering",
  "th.title": "Table",
  "th.whenToUse": "- To display a collection of structured data.\n- To sort, search, paginate and filter data.",
  "th.description": "Checkbox property",
  "th.nzShowCheckbox.description": "Whether `nz-checkbox` should be shown in the header",
  "th.nzDisabled.description": "Whether the `nz-checkbox` is disabled",
  "th.nzIndeterminate.description": "`nz-checkbox` indeterminate status",
  "th.nzLabel.description": "ARIA label for the `nz-checkbox`",
  "th.nzChecked.description": "Checked status, double binding",
  "th.nzCheckedChange.description": "Callback when checked status changes",
  "th.nzShowRowSelection.description": "Whether to show row selection options",
  "th.nzSelections.description": "Selection options including `text` and `onSelect` callback function",
  "th.nzShowFilter.description": "Whether to show filter",
  "th.nzFilterFn.description": "Filter function used to filter the data on client side. Set to `true` when using server side filtering",
  "th.nzFilters.description": "Filter options, `text`, and `value` for callback, `byDefault` to enable filter by default",
  "th.nzFilterMultiple.description": "Whether multiple mode filtering is enabled",
  "th.nzFilterChange.description": "Callback when filter `value` changes",
  "th.nzWidth.description": "Specify the column width (in pixels), can not used when grouping columns",
  "th.nzLeft.description": "Left pixels, used to fixed column to left, auto calc when set to `true` and disable fixed when `false`",
  "th.nzRight.description": "Right pixels, used to fixed column to right, auto calc when set to `true` and disable fixed when `false`",
  "th.nzAlign.description": "Specify how content is aligned",
  "th.nzCellControl.description": "Set the position of the column, which is the value of the `value` field in the `NzCustomColumn` type",
  "th.nzBreakWord.description": "Whether insert line breaks within words",
  "th.nzEllipsis.description": "ellipsis cell content, not working with sorter and filters for now. Only work when nzTableLayout was `fixed`",
  "th.nzColumnKey.description": "column key, work with server sort and filter",
  "td.title": "Table",
  "td.whenToUse": "- To display a collection of structured data.\n- To sort, search, paginate and filter data.",
  "td.description": "Checkbox property",
  "td.nzShowCheckbox.description": "Whether add nz-checkbox",
  "td.nzDisabled.description": "Whether disable checkbox",
  "td.nzIndeterminate.description": "Indeterminate status",
  "td.nzLabel.description": "ARIA label for the `nz-checkbox`",
  "td.nzChecked.description": "Checked status, double binding",
  "td.nzCheckedChange.description": "Checked status change callback",
  "td.colSpan.description": "how many columns the cell extends",
  "td.rowSpan.description": "how many rows the cell extends",
  "td.nzShowExpand.description": "Whether show expand icon",
  "td.nzExpand.description": "Current expand status, double binding",
  "td.nzExpandIcon.description": "Custom expand icon",
  "td.nzExpandChange.description": "Expand status change callback",
  "td.nzLeft.description": "Left pixels, used to fixed column to left, auto calc when set to `true` and disable fixed when `false`",
  "td.nzRight.description": "Right pixels, used to fixed column to right, auto calc when set to `true` and disable fixed when `false`",
  "td.nzAlign.description": "Specify how content is aligned",
  "td.nzCellControl.description": "Set the position of the column, which is the value of the `value` field in the `NzCustomColumn` type",
  "td.nzBreakWord.description": "Whether insert line breaks within words",
  "td.nzEllipsis.description": "ellipsis cell content, not working with sorter and filters for now. Only work when nzTableLayout was `fixed`",
  "td.nzIndentSize.description": "Indent size in pixels of tree data",
  "thead.title": "Table",
  "thead.whenToUse": "- To display a collection of structured data.\n- To sort, search, paginate and filter data.",
  "thead.description": "",
  "thead.nzSortOrderChange.description": "sort change callback，should used with `nzColumnKey` of `th`",
  "tr.title": "Table",
  "tr.whenToUse": "- To display a collection of structured data.\n- To sort, search, paginate and filter data.",
  "tr.description": "",
  "tr.nzExpand.description": "Whether expand current row，used with `nzExpand` of `td`",
  "tfoot.title": "Table",
  "tfoot.whenToUse": "- To display a collection of structured data.\n- To sort, search, paginate and filter data.",
  "tfoot.description": "",
  "tfoot.nzSummary.description": "Summary content",
  "tfoot.nzFixed.description": "Fixed summary, used with `nzScroll`",
  "nz-filter-trigger.title": "Table",
  "nz-filter-trigger.whenToUse": "- To display a collection of structured data.\n- To sort, search, paginate and filter data.",
  "nz-filter-trigger.description": "Customized filter panel",
  "nz-filter-trigger.nzDropdownMenu.description": "Dropdown menu",
  "nz-filter-trigger.nzVisible.description": "whether the dropdown menu is visible, double binding",
  "nz-filter-trigger.nzActive.description": "whether the icon status is activated",
  "nz-filter-trigger.nzHasBackdrop.description": "Whether or not attach a backdrop.",
  "nz-filter-trigger.nzVisibleChange.description": "a callback function takes an argument: `nzVisible`, is executed when the visible state is changed",
  "nz-virtual-scroll.title": "Table",
  "nz-virtual-scroll.whenToUse": "- To display a collection of structured data.\n- To sort, search, paginate and filter data.",
  "nz-virtual-scroll.description": "virtual scroll directive work with `ng-template`, type: `TemplateRef<{ $implicit: T, index: number }>`.",
  "nz-tabs.title": "Tabs",
  "nz-tabs.whenToUse": "Ant Design has 3 types of Tabs for different situations.",
  "nz-tabs.description": "",
  "nz-tabs.nzSelectedIndex.description": "Current tab's index",
  "nz-tabs.nzAnimated.description": "Whether to change tabs with animation. Only works while `nzTabPosition=\"top\" | \"bottom\"`",
  "nz-tabs.nzSize.description": "preset tab bar size",
  "nz-tabs.nzTabBarExtraContent.description": "Extra content in tab bar",
  "nz-tabs.nzTabBarStyle.description": "Tab bar style object",
  "nz-tabs.nzTabPosition.description": "Position of tabs",
  "nz-tabs.nzType.description": "Basic style of tabs",
  "nz-tabs.nzTabBarGutter.description": "The gap between tabs",
  "nz-tabs.nzHideAll.description": "Whether hide all tabs",
  "nz-tabs.nzLinkRouter.description": "Link with Angular router. It supports child mode and query param mode",
  "nz-tabs.nzLinkExact.description": "Use exact routing matching",
  "nz-tabs.nzCanDeactivate.description": "Determine if a tab can be deactivated",
  "nz-tabs.nzCentered.description": "Centers tabs",
  "nz-tabs.nzDestroyInactiveTabPane.description": "Whether destroy inactive TabPane when change tab",
  "nz-tabs.nzSelectedIndexChange.description": "Current tab's index change callback",
  "nz-tabs.nzSelectChange.description": "Current tab's change callback",
  "nz-tab.title": "Tabs",
  "nz-tab.whenToUse": "Ant Design has 3 types of Tabs for different situations.",
  "nz-tab.description": "Tab contents can be lazy loaded by declaring the body in a `ng-template` with the `[nz-tab]` attribute.",
  "nz-tab.nzTitle.description": "Show text in tab's head",
  "nz-tab.nzForceRender.description": "Forced render of content in tabs, not lazy render after clicking on tabs",
  "nz-tab.nzDisabled.description": "tab disable",
  "nz-tab.nzClick.description": "title click callback",
  "nz-tab.nzContextmenu.description": "title contextmenu callback",
  "nz-tab.nzSelect.description": "title select callback",
  "nz-tab.nzDeselect.description": "title deselect callback",
  "nz-tab.nzTabBarExtraContent.description": "Position of extra content",
  "nzTabBarExtraContent.title": "Tabs",
  "nzTabBarExtraContent.whenToUse": "Ant Design has 3 types of Tabs for different situations.",
  "nzTabBarExtraContent.description": "Note: `*nzTabBarExtraContent` has a higher priority than `nz-tabs[nzTabBarExtraContent]`.",
  "nzTabBarExtraContent.nzTabBarExtraContent.description": "Position of extra content",
  "nz-tag.title": "Tag",
  "nz-tag.whenToUse": "- It can be used to tag by dimension or property.\n- When categorizing.",
  "nz-tag.description": "",
  "nz-tag.nzMode.description": "Mode of tag",
  "nz-tag.nzChecked.description": "Checked status of Tag, double binding, only works when `nzMode=\"checkable\"`",
  "nz-tag.nzColor.description": "Color of the Tag",
  "nz-tag.nzBordered.description": "Whether has border style",
  "nz-tag.nzOnClose.description": "Callback executed when tag is closed, only works when `nzMode=\"closable\"`",
  "nz-tag.nzCheckedChange.description": "Checked status change call back, only works when `nzMode=\"checkable\"`",
  "nz-time-picker.title": "TimePicker",
  "nz-time-picker.whenToUse": "By clicking the input box, you can select a time from a popup panel.",
  "nz-time-picker.description": "",
  "nz-time-picker.nzId.description": "input id attribute inside the component",
  "nz-time-picker.ngModel.description": "to set time",
  "nz-time-picker.nzAddOn.description": "called from timepicker panel to render some addon to its bottom",
  "nz-time-picker.nzAllowEmpty.description": "allow clearing text",
  "nz-time-picker.nzAutoFocus.description": "get focus when component mounted",
  "nz-time-picker.nzBackdrop.description": "whether or not the overlay should attach a backdrop",
  "nz-time-picker.nzClearText.description": "clear tooltip of icon",
  "nz-time-picker.nzNowText.description": "text of the Now button",
  "nz-time-picker.nzOkText.description": "text of the Ok button",
  "nz-time-picker.nzDefaultOpenValue.description": "default open panel value if `[ngModel]` is null",
  "nz-time-picker.nzDisabled.description": "determine whether the TimePicker is disabled",
  "nz-time-picker.nzDisabledHours.description": "to specify the hours that cannot be selected",
  "nz-time-picker.nzDisabledMinutes.description": "to specify the minutes that cannot be selected",
  "nz-time-picker.nzDisabledSeconds.description": "to specify the seconds that cannot be selected",
  "nz-time-picker.nzFormat.description": "to set the time format",
  "nz-time-picker.nzHideDisabledOptions.description": "hide the options that can not be selected",
  "nz-time-picker.nzHourStep.description": "interval between hours in picker",
  "nz-time-picker.nzMinuteStep.description": "interval between minutes in picker",
  "nz-time-picker.nzSecondStep.description": "interval between seconds in picker",
  "nz-time-picker.nzSize.description": "width of time picker box",
  "nz-time-picker.nzStatus.description": "Set validation status",
  "nz-time-picker.nzBorderless.description": "~~remove the border~~",
  "nz-time-picker.nzVariant.description": "Variants of TimePicker",
  "nz-time-picker.nzInputReadOnly.description": "set the readonly attribute of the input tag (avoids virtual keyboard on touch devices)",
  "nz-time-picker.nzOpen.description": "whether to popup panel, double binding",
  "nz-time-picker.nzPlaceHolder.description": "display when there's no value",
  "nz-time-picker.nzPopupClassName.description": "className of panel",
  "nz-time-picker.nzUse12Hours.description": "display as 12 hours format, with default format `h:mm:ss a`",
  "nz-time-picker.nzSuffixIcon.description": "the custom suffix icon",
  "nz-time-picker.ngModelChange.description": "a callback function, can be executed when the selected time is changing",
  "nz-time-picker.nzOpenChange.description": "a callback function which will be called while panel opening/closing",
  "nz-timeline.title": "Timeline",
  "nz-timeline.whenToUse": "- When a series of information needs to be ordered by time (ascend or descend).\n- When you need a timeline to make a visual connection.",
  "nz-timeline.description": "Timeline",
  "nz-timeline.nzPending.description": "Set the last ghost node's existence or its content",
  "nz-timeline.nzPendingDot.description": "Set the dot of the last ghost node when pending is true",
  "nz-timeline.nzReverse.description": "Reverse nodes or not",
  "nz-timeline.nzMode.description": "By sending `alternate` the timeline will distribute the nodes to the left and right",
  "nz-timeline-item.title": "Timeline",
  "nz-timeline-item.whenToUse": "- When a series of information needs to be ordered by time (ascend or descend).\n- When you need a timeline to make a visual connection.",
  "nz-timeline-item.description": "Node of timeline",
  "nz-timeline-item.nzColor.description": "Set the circle's color to `'blue' | 'red' | 'green' | 'gray'` or other custom colors",
  "nz-timeline-item.nzDot.description": "Customize timeline dot",
  "nz-timeline-item.nzPosition.description": "Customize position, only works when `nzMode` is `custom`",
  "nz-timeline-item.nzLabel.description": "Set the label",
  "nz-transfer.title": "Transfer",
  "nz-transfer.whenToUse": "- It is a select control essentially which can be use for selecting multiple items.\n- Transfer can display more information for items and take up more space.",
  "nz-transfer.description": "",
  "nz-transfer.nzDataSource.description": "Used for setting the data source. Except for the elements whose keys are `direction: 'right'` prop, or using `nzTargetKeys` prop.",
  "nz-transfer.nzDisabled.description": "Whether the transfer is disabled",
  "nz-transfer.nzTitles.description": "A set of titles that are sorted from left to right.",
  "nz-transfer.nzOperations.description": "A set of operations that are sorted from bottom to top.",
  "nz-transfer.nzListStyle.description": "A custom CSS style used for rendering the transfer columns. equals to `ngStyle`",
  "nz-transfer.nzItemUnit.description": "single unit",
  "nz-transfer.nzItemsUnit.description": "multiple unit",
  "nz-transfer.nzRenderList.description": "Customize render list, please refer to the case.",
  "nz-transfer.nzRender.description": "The function to generate the item shown on a column. please refer to the case.",
  "nz-transfer.nzFooter.description": "A function used for rendering the footer. please refer to the case.",
  "nz-transfer.nzShowSelectAll.description": "Whether to display the select all box",
  "nz-transfer.nzShowSearch.description": "Whether a search box is shown on each column.",
  "nz-transfer.nzFilterOption.description": "A function to determine whether an item should be shown in a search result list",
  "nz-transfer.nzSearchPlaceholder.description": "The hint text of the search box.",
  "nz-transfer.nzNotFoundContent.description": "Text to display when a column is empty.",
  "nz-transfer.nzCanMove.description": "A function to determine what items should be moved (by default all checked items are moved). please refer to the case.",
  "nz-transfer.nzSelectedKeys.description": "A set of keys of selected items.",
  "nz-transfer.nzTargetKeys.description": "A set of keys of elements that are listed on the right column.",
  "nz-transfer.nzOneWay.description": "Display as single direction style",
  "nz-transfer.nzStatus.description": "Set validation status",
  "nz-transfer.nzChange.description": "A callback function that is executed when the transfer between columns is complete.",
  "nz-transfer.nzSearchChange.description": "A callback function which is executed when search field are changed",
  "nz-transfer.nzSelectChange.description": "A callback function which is executed when selected items are changed.",
  "nz-tree.title": "Tree",
  "nz-tree.whenToUse": "Almost anything can be represented in a tree structure. Examples include directories, organization hierarchies, biological classifications, countries, etc. The `Tree` component is a way of representing the hierarchical relationship between these things. You can also expand, collapse, and select a treeNode within a `Tree`.",
  "nz-tree.description": "Tips: According to the current data structure design, you need to ensure that `nzData` is set first, otherwise other attributes will not take effect. After the asynchronous operation returns data, re-assign other attributes to trigger rendering(including `nzExpandAll` `nzExpandedKeys` `nzCheckedKeys` `nzSelectedKeys` `nzSearchValue`). Please refer to [#5152](https://github.com/NG-ZORRO/ng-zorro-antd/issues/5152) to track the optimization progress.",
  "nz-tree.nzData.description": "Tree data (Reference NzTreeNode)",
  "nz-tree.nzBlockNode.description": "Whether treeNode fill remaining horizontal space",
  "nz-tree.nzCheckable.description": "Add a checkbox before the treeNodes",
  "nz-tree.nzShowExpand.description": "Show a Expand Icon before the treeNodes",
  "nz-tree.nzShowLine.description": "Shows a connecting line",
  "nz-tree.nzExpandedIcon.description": "Customize an expand icon",
  "nz-tree.nzShowIcon.description": "Shows the icon before a TreeNode's title. There is no default style",
  "nz-tree.nzAsyncData.description": "Load data asynchronously (should be used with NzTreeNode.addChildren(...))",
  "nz-tree.nzDraggable.description": "Specifies whether this Tree is draggable (IE > 8)",
  "nz-tree.nzMultiple.description": "Allows selecting multiple treeNodes",
  "nz-tree.nzHideUnMatched.description": "Hide unmatched nodes while searching",
  "nz-tree.nzCheckStrictly.description": "Check treeNode precisely; parent treeNode and children treeNodes are not associated",
  "nz-tree.nzTreeTemplate.description": "Custom Nodes",
  "nz-tree.nzExpandAll.description": "Whether to expand all treeNodes",
  "nz-tree.nzExpandedKeys.description": "Specify the keys of the default expanded treeNodes",
  "nz-tree.nzCheckedKeys.description": "Specifies the keys of the default checked treeNodes",
  "nz-tree.nzSelectedKeys.description": "Specifies the keys of the default selected treeNodes",
  "nz-tree.nzSearchValue.description": "Filter (highlight) treeNodes (see demo `Searchable`), two-way binding",
  "nz-tree.nzSearchFunc.description": "Custom matching method, used with `nzSearchValue`",
  "nz-tree.nzBeforeDrop.description": "Drop before the second check, allowing the user to decide whether to allow placement",
  "nz-tree.nzVirtualHeight.description": "The height of virtual scroll",
  "nz-tree.nzVirtualItemSize.description": "The size of the items in the list, same as [cdk itemSize](https://material.angular.io/cdk/scrolling/api)",
  "nz-tree.nzVirtualMaxBufferPx.description": "The number of pixels worth of buffer to render for when rendering new items, same as [cdk maxBufferPx](https://material.angular.io/cdk/scrolling/api)",
  "nz-tree.nzVirtualMinBufferPx.description": "The minimum amount of buffer rendered beyond the viewport (in pixels),same as [cdk minBufferPx](https://material.angular.io/cdk/scrolling/api)",
  "nz-tree.nzClick.description": "Callback function for when the user clicks a treeNode",
  "nz-tree.nzDblClick.description": "Callback function for when the user double clicks a treeNode",
  "nz-tree.nzContextMenu.description": "Callback function for when the user right clicks a treeNode",
  "nz-tree.nzCheckboxChange.description": "Callback function for when user clicks the checkbox",
  "nz-tree.nzExpandChange.description": "Callback function for when a treeNode is expanded or collapsed",
  "nz-tree.nzSearchValueChange.description": "Callback function for when filter treeNodes(used with `nzSearchValue`)",
  "nz-tree.nzOnDragStart.description": "Callback function for when the onDragStart event occurs",
  "nz-tree.nzOnDragEnter.description": "Callback function for when the onDragEnter event occurs",
  "nz-tree.nzOnDragOver.description": "Callback function for when the onDragOver event occurs",
  "nz-tree.nzOnDragLeave.description": "Callback function for when the onDragLeave event occurs",
  "nz-tree.nzOnDrop.description": "Callback function for when the onDrop event occurs",
  "nz-tree.nzOnDragEnd.description": "Callback function for when the onDragEnd event occurs",
  "nz-tree-select.title": "TreeSelect",
  "nz-tree-select.whenToUse": "`TreeSelect` is similar to `Select`, but the values are provided in a tree like structure.\nAny data whose entries are defined in a hierarchical manner is fit to use this control. Examples of such case may include a corporate hierarchy, a directory structure, and so on.",
  "nz-tree-select.description": "",
  "nz-tree-select.nzId.description": "input id attribute inside the component",
  "nz-tree-select.nzAllowClear.description": "Whether allow clear",
  "nz-tree-select.nzPlaceHolder.description": "Placeholder of the select input",
  "nz-tree-select.nzPlacement.description": "The position where the selection box pops up",
  "nz-tree-select.nzDisabled.description": "Disabled or not",
  "nz-tree-select.nzShowIcon.description": "Shows the icon before a TreeNode's title. There is no default style",
  "nz-tree-select.nzShowSearch.description": "Whether to display a search input in the dropdown menu(valid only in the single mode)",
  "nz-tree-select.nzNotFoundContent.description": "Specify content to show when no result matches.",
  "nz-tree-select.nzDropdownMatchSelectWidth.description": "Determine whether the dropdown menu and the select input are the same width",
  "nz-tree-select.nzDropdownStyle.description": "To set the style of the dropdown menu",
  "nz-tree-select.nzDropdownClassName.description": "classname of dropdown menu",
  "nz-tree-select.nzMultiple.description": "Support multiple or not, will be `true` when enable `nzCheckable`.",
  "nz-tree-select.nzHideUnMatched.description": "Hide unmatched nodes while searching",
  "nz-tree-select.nzSize.description": "To set the size of the select input",
  "nz-tree-select.nzStatus.description": "Set validation status",
  "nz-tree-select.nzCheckable.description": "Whether to show checkbox on the treeNodes",
  "nz-tree-select.nzCheckStrictly.description": "Check treeNode precisely; parent treeNode and children treeNodes are not associated",
  "nz-tree-select.nzShowExpand.description": "Show a Expand Icon before the treeNodes",
  "nz-tree-select.nzShowLine.description": "Shows a connecting line",
  "nz-tree-select.nzPrefix.description": "The custom prefix",
  "nz-tree-select.nzSuffixIcon.description": "The custom suffix icon",
  "nz-tree-select.nzAsyncData.description": "Load data asynchronously (should be used with NzTreeNode.addChildren(...))",
  "nz-tree-select.nzNodes.description": "Data of the treeNodes",
  "nz-tree-select.nzDefaultExpandAll.description": "Whether to expand all treeNodes by default",
  "nz-tree-select.nzExpandedKeys.description": "Default expanded treeNodes",
  "nz-tree-select.nzDisplayWith.description": "How to display the selected node value in the trigger",
  "nz-tree-select.nzMaxTagCount.description": "Max tag count to show",
  "nz-tree-select.nzMaxTagPlaceholder.description": "Placeholder for not showing tags",
  "nz-tree-select.nzTreeTemplate.description": "Custom Nodes",
  "nz-tree-select.nzVariant.description": "Variants of TreeSelect",
  "nz-tree-select.nzVirtualHeight.description": "The height of virtual scroll",
  "nz-tree-select.nzVirtualItemSize.description": "The size of the items in the list, same as [cdk itemSize](https://material.angular.io/cdk/scrolling/api)",
  "nz-tree-select.nzVirtualMaxBufferPx.description": "The number of pixels worth of buffer to render for when rendering new items, same as [cdk maxBufferPx](https://material.angular.io/cdk/scrolling/api)",
  "nz-tree-select.nzVirtualMinBufferPx.description": "The minimum amount of buffer rendered beyond the viewport (in pixels),same as [cdk minBufferPx](https://material.angular.io/cdk/scrolling/api)",
  "nz-tree-select.nzBackdrop.description": "whether or not the overlay should attach a backdrop",
  "nz-tree-select.nzExpandChange.description": "Callback function for when a treeNode is expanded or collapsed",
  "nz-tree-view.title": "TreeView",
  "nz-tree-view.whenToUse": "More basic Tree component, allowing each of its parts to be defined in the template, and state to be managed manually.",
  "nz-tree-view.description": "",
  "nz-tree-view.nzTreeControl.description": "The tree controller",
  "nz-tree-view.nzDataSource.description": "The data array to render",
  "nz-tree-view.nzDirectoryTree.description": "Whether nodes are displayed as directory style",
  "nz-tree-view.nzBlockNode.description": "Whether tree nodes fill remaining horizontal space",
  "nz-tree-virtual-scroll-view.title": "TreeView",
  "nz-tree-virtual-scroll-view.whenToUse": "More basic Tree component, allowing each of its parts to be defined in the template, and state to be managed manually.",
  "nz-tree-virtual-scroll-view.description": "The virtual scroll tree view, which can be accessed from\nthe [CdkVirtualScrollViewport](https://material.angular.io/cdk/scrolling/api#CdkVirtualScrollViewport) instance through\nthe `virtualScrollViewport` member of the component instance.",
  "nz-tree-virtual-scroll-view.nzTreeControl.description": "The tree controller",
  "nz-tree-virtual-scroll-view.nzDataSource.description": "The data array to render",
  "nz-tree-virtual-scroll-view.nzDirectoryTree.description": "Whether nodes are displayed as directory style",
  "nz-tree-virtual-scroll-view.nzBlockNode.description": "Whether tree nodes fill remaining horizontal space",
  "nz-tree-virtual-scroll-view.nzItemSize.description": "The size of nodes in the tree (in pixels)",
  "nz-tree-virtual-scroll-view.nzMinBufferPx.description": "The minimum amount of buffer rendered allowed outside the viewport (in pixels)",
  "nz-tree-virtual-scroll-view.nzMaxBufferPx.description": "The amount of buffer required for rendering new nodes (in pixels)",
  "nzTreeNodeDef.title": "TreeView",
  "nzTreeNodeDef.whenToUse": "More basic Tree component, allowing each of its parts to be defined in the template, and state to be managed manually.",
  "nzTreeNodeDef.description": "Directive to define `nz-tree-node`.",
  "nzTreeNodeDef.nzTreeNodeDefWhen.description": "A matching function which indicates whether inputted node should be used. It matches the very first node that makes this function return `true`. If no nodes that makes this function return `true`, the node which does not define this function would be matched instead.",
  "nz-tree-node.title": "TreeView",
  "nz-tree-node.whenToUse": "More basic Tree component, allowing each of its parts to be defined in the template, and state to be managed manually.",
  "nz-tree-node.description": "The tree node container component, which needs to be defined by the `nzTreeNodeDef` directive.",
  "nz-tree-node.nzTreeNodeToggleRecursive.description": "Is it recursively expand / collapse",
  "nzTreeNodePadding.title": "TreeView",
  "nzTreeNodePadding.whenToUse": "More basic Tree component, allowing each of its parts to be defined in the template, and state to be managed manually.",
  "nzTreeNodePadding.description": "Show node indentation by adding `padding` **Best Performance**.",
  "nzTreeNodePadding.nzTreeNodeToggleRecursive.description": "Is it recursively expand / collapse",
  "nzTreeNodeIndentLine.title": "TreeView",
  "nzTreeNodeIndentLine.whenToUse": "More basic Tree component, allowing each of its parts to be defined in the template, and state to be managed manually.",
  "nzTreeNodeIndentLine.description": "Show node indentation by adding indent lines.",
  "nzTreeNodeIndentLine.nzTreeNodeToggleRecursive.description": "Is it recursively expand / collapse",
  "nz-tree-node-toggle.title": "TreeView",
  "nz-tree-node-toggle.whenToUse": "More basic Tree component, allowing each of its parts to be defined in the template, and state to be managed manually.",
  "nz-tree-node-toggle.description": "A toggle which is used to expand / collapse the node.",
  "nz-tree-node-toggle.nzTreeNodeToggleRecursive.description": "Is it recursively expand / collapse",
  "nzTreeNodeToggleRotateIcon.title": "TreeView",
  "nzTreeNodeToggleRotateIcon.whenToUse": "More basic Tree component, allowing each of its parts to be defined in the template, and state to be managed manually.",
  "nzTreeNodeToggleRotateIcon.description": "Define an icon in the toggle, which it will automatically rotate depending on the collapse/expand state.",
  "nzTreeNodeToggleRotateIcon.nzSelected.description": "Whether the option is selected",
  "nzTreeNodeToggleRotateIcon.nzDisabled.description": "Whether the option is disabled",
  "nzTreeNodeToggleRotateIcon.nzClick.description": "Event on click",
  "nzTreeNodeToggleActiveIcon.title": "TreeView",
  "nzTreeNodeToggleActiveIcon.whenToUse": "More basic Tree component, allowing each of its parts to be defined in the template, and state to be managed manually.",
  "nzTreeNodeToggleActiveIcon.description": "Define an icon in the toggle for an active style, which it can be used for the loading state.",
  "nzTreeNodeToggleActiveIcon.nzSelected.description": "Whether the option is selected",
  "nzTreeNodeToggleActiveIcon.nzDisabled.description": "Whether the option is disabled",
  "nzTreeNodeToggleActiveIcon.nzClick.description": "Event on click",
  "nz-tree-node-option.title": "TreeView",
  "nz-tree-node-option.whenToUse": "More basic Tree component, allowing each of its parts to be defined in the template, and state to be managed manually.",
  "nz-tree-node-option.description": "Define the selectable feature of a node.",
  "nz-tree-node-option.nzSelected.description": "Whether the option is selected",
  "nz-tree-node-option.nzDisabled.description": "Whether the option is disabled",
  "nz-tree-node-option.nzClick.description": "Event on click",
  "nz-tree-node-checkbox.title": "TreeView",
  "nz-tree-node-checkbox.whenToUse": "More basic Tree component, allowing each of its parts to be defined in the template, and state to be managed manually.",
  "nz-tree-node-checkbox.description": "Define the checkbox feature of a node.",
  "nz-tree-node-checkbox.nzChecked.description": "Whether the checkbox is checked",
  "nz-tree-node-checkbox.nzDisabled.description": "Whether the checkbox is disabled",
  "nz-tree-node-checkbox.nzIndeterminate.description": "Whether the checkbox is indeterminate",
  "nz-tree-node-checkbox.nzClick.description": "Event on click",
  "nz-typography.title": "Typography",
  "nz-typography.whenToUse": "- When need to display title or paragraph contents in Articles/Blogs/Notes.\n- When you need copyable/editable/ellipsis texts.",
  "nz-typography.description": "",
  "nz-typography.nzContent.description": "Component content",
  "nz-typography.nzCopyable.description": "Can copy, require use `[nzContent]`",
  "nz-typography.nzEditable.description": "Editable, require use `[nzContent]`",
  "nz-typography.nzCopyIcons.description": "Custom copy icons",
  "nz-typography.nzCopyTooltips.description": "Custom tooltips text, hide when it is `null`",
  "nz-typography.nzEditIcon.description": "Custom edit icon",
  "nz-typography.nzEditTooltip.description": "Custom tooltip text, hide when it is `null`",
  "nz-typography.nzEllipsis.description": "Display ellipsis when overflow, require use `[nzContent]` when dynamic content",
  "nz-typography.nzSuffix.description": "The text suffix when used `nzEllipsis`",
  "nz-typography.nzCopyText.description": "Customize the copy text",
  "nz-typography.nzDisabled.description": "Disable content",
  "nz-typography.nzExpandable.description": "Expandable when ellipsis",
  "nz-typography.nzEllipsisRows.description": "Line number",
  "nz-typography.nzType.description": "Content type",
  "nz-typography.nzContentChange.description": "Trigger when user edit the content",
  "nz-typography.nzExpandChange.description": "Trigger when user expanded the content",
  "nz-typography.nzOnEllipsis.description": "Trigger when ellipsis status changed",
  "nz-upload.title": "Upload",
  "nz-upload.whenToUse": "Uploading is publishing information (web pages, text, pictures, video, etc.) to a remote server via a web page or upload tool.",
  "nz-upload.description": "",
  "nz-upload.nzAccept.description": "File types that can be accepted. See [input accept Attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-accept)",
  "nz-upload.nzAction.description": "Required. Uploading URL",
  "nz-upload.nzDirectory.description": "support uploading the whole directory ([caniuse](https://caniuse.com/#feat=input-file-directory))",
  "nz-upload.nzBeforeUpload.description": "Hook function, which will be executed before uploading. Uploading will be stopped with `false` or an Observable. **Warning： this function is not supported in IE9**. NOTICE: Must use `=>` to define the method.",
  "nz-upload.nzCustomRequest.description": "Override for the default XHR behavior allowing for additional customization and the ability to implement your own XMLHttpRequest. NOTICE: Must use `=>` to define the method.",
  "nz-upload.nzData.description": "Uploading params or function which can return uploading params. NOTICE: Must use `=>` to define the method.",
  "nz-upload.nzDisabled.description": "disable upload button",
  "nz-upload.nzFileList.description": "List of files, two-way data-binding",
  "nz-upload.nzLimit.description": "limit single upload count when `nzMultiple` has opened. `0` unlimited",
  "nz-upload.nzSize.description": "limit file size (KB). `0` unlimited",
  "nz-upload.nzFileType.description": "limit file type, e.g: `image/png,image/jpeg,image/gif,image/bmp`",
  "nz-upload.nzFilter.description": "Custom filter when choose file",
  "nz-upload.nzHeaders.description": "Set request headers, valid above IE10. NOTICE: Must use `=>` to define the method.",
  "nz-upload.nzListType.description": "Built-in stylesheets, support for three types: `text`, `picture` or `picture-card`",
  "nz-upload.nzMultiple.description": "Whether to support selected multiple files. `IE10+` supported. You can select multiple files with CTRL holding down while multiple is set to be true",
  "nz-upload.nzName.description": "The name of the uploading file",
  "nz-upload.nzShowUploadList.description": "Whether to show the default upload list, could be an object to specify `showPreviewIcon`, `showRemoveIcon` and `showDownloadIcon` individually",
  "nz-upload.nzShowButton.description": "Show upload button",
  "nz-upload.nzWithCredentials.description": "ajax upload with cookie sent",
  "nz-upload.nzOpenFileDialogOnClick.description": "click open file dialog",
  "nz-upload.nzPreview.description": "A callback function will be executed when the file link or preview icon is clicked. NOTICE: Must use `=>` to define the method.",
  "nz-upload.nzPreviewFile.description": "Customize preview file logic. NOTICE: Must use `=>` to define the method.",
  "nz-upload.nzPreviewIsImage.description": "Customize the preview file is an image, generally used when the image URL is in a non-standard format. NOTICE: Must use `=>` to define the method.",
  "nz-upload.nzRemove.description": "A callback function will be executed when the removing file button is clicked, remove event will be prevented when the return value is `false` or an Observable. NOTICE: Must use `=>` to define the method.",
  "nz-upload.nzChange.description": "A callback function, can be executed when uploading state is changing",
  "nz-upload.nzDownload.description": "Click the method to download the file, pass the method to perform the method logic, do not pass the default jump to the new TAB.",
  "nz-upload.nzTransformFile.description": "~~Customize transform file before request~~",
  "nz-upload.nzIconRender.description": "Custom show icon",
  "nz-upload.nzFileListRender.description": "Custom file list",
  "nz-water-mark.title": "WaterMark",
  "nz-water-mark.whenToUse": "- Use when the page needs to be watermarked to identify the copyright.\n- Suitable for preventing information theft.",
  "nz-water-mark.description": "",
  "nz-water-mark.nzContent.description": "Watermark text content",
  "nz-water-mark.nzWidth.description": "The width of the watermark, the default value of `nzContent` is its own width",
  "nz-water-mark.nzHeight.description": "The height of the watermark, the default value of `nzContent` is its own height",
  "nz-water-mark.nzRotate.description": "When the watermark is drawn, the rotation Angle, unit `°`",
  "nz-water-mark.nzZIndex.description": "The z-index of the appended watermark element",
  "nz-water-mark.nzImage.description": "Image source, it is recommended to export 2x or 3x image, high priority (support base64 format)",
  "nz-water-mark.nzFont.description": "Text style",
  "nz-water-mark.nzGap.description": "The spacing between watermarks",
  "nz-water-mark.nzOffset.description": "The offset of the watermark from the upper left corner of the container. The default is `nzGap/2`",
  "nz-water-mark.color.description": "font color",
  "nz-water-mark.fontSize.description": "font size",
  "nz-water-mark.fontWeight.description": "font weight",
  "nz-water-mark.fontFamily.description": "font family",
  "nz-water-mark.fontStyle.description": "font style",
  "auto-focus.title": "Auto focus",
  "auto-focus.whenToUse": "",
  "auto-focus.description": "",
  "auto-focus.enabled.description": "Whether enabled of auto focus",
  "auto-focus.delay.description": "Delay of the focus (unit: ms)",
  "auto-focus.focus.description": "Get focus callback",
  "cell.title": "Cell Data",
  "cell.whenToUse": "",
  "cell.description": "",
  "cell.value.description": "Value of the cell",
  "cell.options.description": "Option of the cell",
  "cell.loading.description": "Whether loading",
  "cell.type.description": "Render type of the cell",
  "cell.tooltip.description": "Text popup tip",
  "cell.renderType.description": "Render type of the cell",
  "cell.size.description": "Size of the cell",
  "cell.unit.description": "Unit, can also be specified by `value: {text: 100, unit: 'RMB'}`",
  "cell.default.description": "Default text",
  "cell.mask.description": "Format mask, [Document](https://ng-alain.com/util/format/en#formatMask)",
  "cell.widget.description": "Widget config",
  "cell.date.description": "Date config, supports `minutes ago` formatting",
  "cell.mega.description": "Large number format filter, [Document](https://ng-alain.com/util/format/en#mega)",
  "cell.currency.description": "Currency config",
  "cell.boolean.description": "Boolean config",
  "cell.img.description": "Image config, support large image preview",
  "cell.link.description": "Link config",
  "cell.html.description": "HTML config",
  "cell.badge.description": "Badge config",
  "cell.tag.description": "Tag config",
  "cell.checkbox.description": "Checkbox config",
  "cell.radio.description": "Radio config",
  "count-down.title": "Count down",
  "count-down.whenToUse": "",
  "count-down.description": "",
  "count-down.target.description": "Target time, `number` means seconds",
  "count-down.config.description": "[Config](https://github.com/cipchk/ngx-countdown#countdownconfig) paraments",
  "count-down.event.description": "Event notification",
  "extend.title": "Data Range",
  "extend.whenToUse": "",
  "extend.description": "It needs to be used with [nz-range-picker](https://ng.ant.design/components/date-picker/zh#nz-range-picker), for example:",
  "extend.ngModelEnd.description": "End date, start and end values at the same time",
  "extend.shortcut.description": "Set shortcuts",
  "down-file.title": "Download file",
  "down-file.whenToUse": "",
  "down-file.description": "",
  "down-file.http-data.description": "Parameter of request",
  "down-file.http-body.description": "Body of request",
  "down-file.http-method.description": "Method of request",
  "down-file.http-url.description": "Url of request",
  "down-file.file-name.description": "Specify a file name",
  "down-file.pre.description": "Callback of download",
  "down-file.success.description": "Success callback",
  "down-file.error.description": "Error callback",
  "ellipsis.title": "Ellipsis",
  "ellipsis.whenToUse": "",
  "ellipsis.description": "",
  "ellipsis.tooltip.description": "tooltip for showing the full text content when hovering over",
  "ellipsis.length.description": "maximum number of characters in the text before being truncated",
  "ellipsis.lines.description": "maximum number of rows in the text before being truncated",
  "ellipsis.fullWidthRecognition.description": "whether consider full-width character length as 2 when calculate string length",
  "ellipsis.tail.description": "specify overflow tail",
  "error-collect.title": "Error Collect",
  "error-collect.whenToUse": "",
  "error-collect.description": "",
  "error-collect.freq.description": "Monitor frequency, unit is milliseconds",
  "error-collect.offsetTop.description": "Top offset, unit is `px`",
  "exception.title": "Exception",
  "exception.whenToUse": "",
  "exception.description": "",
  "exception.type.description": "type of exception, the corresponding default `title`, `desc`, `img` will be given if set, which can be overridden by explicit setting of `title`, `desc`, `img`",
  "exception.title.description": "title",
  "exception.desc.description": "supplementary description",
  "exception.img.description": "the url of background image",
  "exception.backRouterLink.description": "Back of router link",
  "exception.ng-content.description": "suggested operations, a default 'Home' link will show if not set",
  "footer-toolbar.title": "FooterToolbar",
  "footer-toolbar.whenToUse": "",
  "footer-toolbar.description": "",
  "footer-toolbar.ng-content.description": "toolbar content, align to the right",
  "footer-toolbar.errorCollect.description": "Whether `error-collect`, make sure to wrap inside the `<form>` element",
  "footer-toolbar.extra.description": "extra information, align to the left",
  "full-content.title": "Full Screen Workspace",
  "full-content.whenToUse": "",
  "full-content.description": "",
  "full-content.fullscreen.description": "Whether full screen (not including top, sidebar area)",
  "full-content.hideTitle.description": "Hide title when `fullscreen` is true",
  "full-content.padding.description": "Padding of work area",
  "full-toggle.title": "Full Screen Workspace",
  "full-toggle.whenToUse": "",
  "full-toggle.description": "Switch whether it is full screen.",
  "global-footer.title": "Global footer",
  "global-footer.whenToUse": "",
  "global-footer.description": "",
  "global-footer.links.description": "Link data",
  "global-footer.copyright.description": "Copyright Information",
  "global-footer.title.description": "Title",
  "global-footer.href.description": "Routing link",
  "global-footer.blankTarget.description": "Whether to open a new window",
  "global-footer-item.title": "Global footer",
  "global-footer-item.whenToUse": "",
  "global-footer-item.description": "",
  "global-footer-item.ng-content.description": "Title",
  "global-footer-item.href.description": "Routing link",
  "global-footer-item.blankTarget.description": "Whether to open a new window",
  "hotkey.title": "Hotkey",
  "hotkey.whenToUse": "",
  "hotkey.description": "",
  "hotkey.hotkey.description": "Specify [hotkey format](https://github.com/github/hotkey#hotkey-string-format)",
  "media.title": "HTML5 Media",
  "media.whenToUse": "",
  "media.description": "",
  "media.type.description": "Media type",
  "media.source.description": "Source of the media",
  "media.options.description": "Source options of the media, please refer to [plyr options](https://github.com/sampotts/plyr#options)",
  "media.delay.description": "Delay init plyr player, unit: ms",
  "media.ready.description": "Ready callback",
  "notice-icon.title": "Notification menu",
  "notice-icon.whenToUse": "",
  "notice-icon.description": "",
  "notice-icon.data.description": "Data",
  "notice-icon.count.description": "Total number of messages on the icon",
  "notice-icon.loading.description": "Pop up card loading status",
  "notice-icon.centered.description": "Whether the tab is centered",
  "notice-icon.select.description": "Click the callback of the list item",
  "notice-icon.clear.description": "Callback for clicking the clear button",
  "notice-icon.popoverVisible.description": "Manual control of Popover display",
  "notice-icon.popoverVisibleChange.description": "Popover callback",
  "notice-icon.btnClass.description": "Class of the button",
  "notice-icon.btnIconClass.description": "Class of the icon in button",
  "observeSize.title": "Observers",
  "observeSize.whenToUse": "",
  "observeSize.description": "Watch the DOM size change.",
  "observeSize.observeSize.description": "Event",
  "page-header.title": "Page Header",
  "page-header.whenToUse": "",
  "page-header.description": "",
  "page-header.title.description": "Title of the page",
  "page-header.titleSub.description": "Sub title of the page",
  "page-header.autoTitle.description": "Whether to automatically generate the title and locate it from the main menu with the current route",
  "page-header.syncTitle.description": "Whether to automatically synchronize the title to `TitleService`, `ReuseService`, only valid when `title` is of type `string`",
  "page-header.home.description": "Home page text of the breadcrumb, if empty is specified, it will not be displayed",
  "page-header.homeLink.description": "Home page link of the breadcrumb",
  "page-header.homeI18n.description": "Home page i18n of the breadcrumb",
  "page-header.autoBreadcrumb.description": "Whether to automatically generate navigation, use the current route to locate from the main menu",
  "page-header.recursiveBreadcrumb.description": "Search automatically upward recursively, if the menu data source contains `/ware`, then `/ware/1` is also regarded as `/ware` item",
  "page-header.loading.description": "Whether loading",
  "page-header.wide.description": "Whether wide",
  "page-header.fixed.description": "Whether fixed mode",
  "page-header.fixedOffsetTop.description": "Fixed offset of the fixed mode",
  "page-header.breadcrumb.description": "Custom navigation area",
  "page-header.logo.description": "Custom LOGO area",
  "page-header.action.description": "Custom action area",
  "page-header.content.description": "Custom content area",
  "page-header.extra.description": "Customize extra information area",
  "page-header.tab.description": "Custom tab area",
  "pdf.title": "Pdf",
  "pdf.whenToUse": "",
  "pdf.description": "",
  "pdf.src.description": "Specify path of the pdf",
  "pdf.pi.description": "Current page",
  "pdf.showAll.description": "Whether to show all pages",
  "pdf.renderText.description": "Enable text rendering, allows to select text",
  "pdf.textLayerMode.description": "Text rendering mode",
  "pdf.showBorders.description": "Show page borders",
  "pdf.stickToPage.description": "Sticks view to the page",
  "pdf.originalSize.description": "Control document display size, `true` size will be as same as original document, `false` size will be as same as container block",
  "pdf.fitToPage.description": "Works in combination with `originalSize`. You can show your document in original size, and make sure that it's not bigger then container block.",
  "pdf.zoom.description": "Zoom pdf",
  "pdf.zoomScale.description": "Defines how the Zoom scale is computed",
  "pdf.rotation.description": "Rotate PDF, Allowed step is 90 degree, ex. 0, 90, 180",
  "pdf.autoReSize.description": "Turn on or off auto resize",
  "pdf.externalLinkTarget.description": "Link target of the external",
  "pdf.delay.description": "Delayed rendering, unit: ms",
  "pdf.change.description": "change event",
  "quick-menu.title": "Quick Menu",
  "quick-menu.whenToUse": "",
  "quick-menu.description": "",
  "quick-menu.icon.description": "Icon for the quick menu",
  "quick-menu.top.description": "Icon from top",
  "quick-menu.width.description": "Width after opening",
  "quick-menu.bgColor.description": "Background for the quick menu",
  "quick-menu.borderColor.description": "Border for the quick menu",
  "quick-menu.expand.description": "Current expand status, double binding",
  "quick-menu.expandChange.description": "Expand status change callback",
  "reuse-tab.title": "Reuse Route Tab",
  "reuse-tab.whenToUse": "",
  "reuse-tab.description": "",
  "reuse-tab.i18n.description": "Context Menu internationalization, support HTML",
  "reuse-tab.mode.description": "Matching Mode",
  "reuse-tab.debug.description": "Whether Debug mode",
  "reuse-tab.max.description": "Maximum of reuse",
  "reuse-tab.keepingScroll.description": "Keep the scrollbar position",
  "reuse-tab.keepingScrollContainer.description": "Keep the scroll bar container",
  "reuse-tab.excludes.description": "Exclusion rules, limited by `mode=URL`",
  "reuse-tab.allowClose.description": "Whether to allow close tab",
  "reuse-tab.customContextMenu.description": "Custom context click menu",
  "reuse-tab.tabBarExtraContent.description": "Extra content in tab bar",
  "reuse-tab.tabBarStyle.description": "Tab bar style object",
  "reuse-tab.tabBarGutter.description": "The gap between tabs",
  "reuse-tab.tabType.description": "Basic style of tabs",
  "reuse-tab.tabMaxWidth.description": "The maximum width of each tab, unit: `px`",
  "reuse-tab.routeParamMatchMode.description": "Match the pattern when routing parameters are included, for example:`/view/:id`<br> - `strict` Strict mode `/view/1`, `/view/2` Different pages<br> - `loose` Loose mode `/view/1`, `/view/2` Same page and only one tab of component",
  "reuse-tab.disabled.description": "Whether to disabled",
  "reuse-tab.titleRender.description": "Custom rendering of the title",
  "reuse-tab.storageState.description": "Whether to store the state, keep the last browser state",
  "reuse-tab.canClose.description": "A function to determine what should be closed",
  "reuse-tab.close.description": "Close",
  "reuse-tab.change.description": "Callback when switching",
  "reuse-tab.closeOther.description": "Close other tabs",
  "reuse-tab.closeRight.description": "Close tabs to the right",
  "reuse-tab.clear.description": "Clear tabs",
  "se-container.title": "Edit",
  "se-container.whenToUse": "",
  "se-container.description": "",
  "se-container.gutter.description": "specify the distance between two items, unit is `px`, only `nzLayout:horizontal`",
  "se-container.se-container.description": "specify the maximum number of columns to display, the final columns number is determined by col setting combined with [Responsive Rules](/theme/responsive)",
  "se-container.col.description": "specify the maximum number of columns to display, the final columns number is determined by col setting combined with [Responsive Rules](/theme/responsive)",
  "se-container.labelWidth.description": "label text of width, unit is `px`",
  "se-container.nzLayout.description": "type of layout when `inline` forced size is `compact`",
  "se-container.size.description": "size of edit, forced ingores `error`, `extra`",
  "se-container.firstVisual.description": "Immediately show validation error message",
  "se-container.ingoreDirty.description": "Whether to ignore the `dirty` check",
  "se-container.line.description": "whether separation line style",
  "se-container.title.description": "Display title",
  "se-container.errors.description": "Batch modify `se` error value",
  "se-container.noColon.description": "Whether to not display : after label text",
  "se.title": "Edit",
  "se.whenToUse": "",
  "se.description": "",
  "se.col.description": "specify the maximum number of columns to display, the final columns number is determined by col setting combined with [Responsive Rules](/theme/responsive) (Inherited from `se-container`)",
  "se.label.description": "Label",
  "se.labelWidth.description": "label text of width, unit is `px` (Inherited from `se-container`)",
  "se.hideLabel.description": "Whether to hide the current label",
  "se.optional.description": "Label optional information",
  "se.optionalHelp.description": "Label optional help",
  "se.optionalHelpColor.description": "The background color of label optional help",
  "se.error.description": "validation error message",
  "se.extra.description": "The extra prompt message. It is similar to help.",
  "se.required.description": "Whether required identifier, if not set, the value is automatically set according to whether the form element has `RequiredValidator` validation",
  "se.controlClass.description": "Control area classes",
  "se.id.description": "Custom `id` value of component",
  "se.line.description": "whether separation line style (Inherited from `se-container`)",
  "se.noColon.description": "Whether to not display : after label text",
  "se-title.title": "Edit",
  "se-title.whenToUse": "",
  "se-title.description": "Display title.",
  "sg-container.title": "Simple Grid",
  "sg-container.whenToUse": "",
  "sg-container.description": "",
  "sg-container.gutter.description": "specify the distance between two items, unit is `px`, only `nzLayout:horizontal`",
  "sg-container.sg-container.description": "specify the maximum number of columns to display, the final columns number is determined by col setting combined with [Responsive Rules](/theme/responsive)",
  "sg-container.col.description": "specify the maximum number of columns to display, the final columns number is determined by col setting combined with [Responsive Rules](/theme/responsive)",
  "sg.title": "Simple Grid",
  "sg.whenToUse": "",
  "sg.description": "",
  "sg.col.description": "specify the maximum number of columns to display, the final columns number is determined by col setting combined with [Responsive Rules](/theme/responsive)",
  "st.title": "Table",
  "st.whenToUse": "",
  "st.description": "",
  "st.columns.description": "Columns description",
  "st.data.description": "Data source",
  "st.req.description": "Http request configuration",
  "st.res.description": "Http response configuration",
  "st.pi.description": "Page index",
  "st.ps.description": "Page size, default is `10`",
  "st.total.description": "To display the total number and range, support custom string template (Three variable names: `total` for total data, `range[0]` and `range[1]` for current data range; **Variable name** must be double curly braces wrapper)",
  "st.page.description": "Pager configuration",
  "st.noResult.description": "Custom no result content",
  "st.bordered.description": "Whether to show all table borders",
  "st.size.description": "Size of table",
  "st.widthMode.description": "Set the table width mode",
  "st.rowClassName.description": "Row class name of table",
  "st.clickRowClassName.description": "Row class name of click the row",
  "st.loading.description": "Loading status of table, when specifying `null` is controlled by st",
  "st.loadingIndicator.description": "The spinning indicator",
  "st.loadingDelay.description": "Specifies a delay in milliseconds for loading state (prevent flush)",
  "st.delay.description": "Whether to delay table rendering, requires manual call to `refreshColumns()` to render",
  "st.scroll.description": "Whether table can be scrolled in x/y direction, x or y can be a string that indicates the width and height of table body",
  "st.virtualScroll.description": "Enable virtual scroll mode，work with `[nzScroll]`",
  "st.virtualItemSize.description": "The size of the items in the list, same as [cdk itemSize](https://material.angular.io/cdk/scrolling/api)",
  "st.virtualMaxBufferPx.description": "The number of pixels worth of buffer to render for when rendering new items, same as [cdk maxBufferPx](https://material.angular.io/cdk/scrolling/api)",
  "st.virtualMinBufferPx.description": "The minimum amount of buffer rendered beyond the viewport (in pixels),same as [cdk minBufferPx](https://material.angular.io/cdk/scrolling/api)",
  "st.virtualForTrackBy.description": "The TrackByFunction to use for tracking changes.",
  "st.singleSort.description": "Single sort config<br>If not specified, return: `columnName=ascend",
  "st.multiSort.description": "Whether to mulit-sort, recommended use in URL data source",
  "st.header.description": "Table header renderer",
  "st.showHeader.description": "Whether show the head of the columns of the table",
  "st.footer.description": "Table footer renderer",
  "st.bodyHeader.description": "Table extra body renderer in header, generally used to add total rows",
  "st.body.description": "Request body (only method is POST)",
  "st.widthConfig.description": "Set col width can not used with width of STColumn",
  "st.expandRowByClick.description": "Whether to expand row by clicking anywhere in the whole row",
  "st.expandAccordion.description": "Accordion mode",
  "st.expand.description": "Whether current column include expand icon",
  "st.expandIcon.description": "Custom expand icon",
  "st.responsive.description": "Whether to turn on responsive",
  "st.responsiveHideHeaderFooter.description": "Whether to display the header and footer under the small screen",
  "st.resizable.description": "Resize header of the current table, **Multiple headers not supported**",
  "st.trackBy.description": "`TrackByFunction` function of list loop `@for`",
  "st.drag.description": "Drag soring",
  "st.change.description": "Events",
  "st.error.description": "Error event",
  "st.type.description": "Type of width mode",
  "st.params.description": "Request parameters, default to auto append `pi`, `ps` to URL",
  "st.ignoreParamNull.description": "Whether to ignore `null` or `unfind` values in parameters",
  "st.method.description": "Request method",
  "st.headers.description": "Request header",
  "st.reName.description": "Map name `total`、`list`, could be set like `a.b.c`",
  "st.allInBody.description": "Whether to request all parameter data into `body` (except `url` itself parameter)",
  "st.lazyLoad.description": "Whether to delay loading data in first render `st` component",
  "st.process.description": "Data preprocessing",
  "st.front.description": "Front paging when `data` is `any[]` or `Observable<any[]>`",
  "st.zeroIndexed.description": "Whether the backend paging uses the `0` base index (only data is url)",
  "st.position.description": "Specify the position of Pagination",
  "st.placement.description": "Specify the direction of Pagination",
  "st.show.description": "Whether to show pager",
  "st.showSize.description": "Determine whether `ps` can be changed",
  "st.pageSizes.description": "Specify the sizeChanger options",
  "st.showQuickJumper.description": "Determine whether you can jump to pages directly",
  "st.toTop.description": "To top when pager changed",
  "st.toTopOffset.description": "To top offset value",
  "st.itemRender.description": "To customize Pagination item, same as Pagination",
  "st.simple.description": "Whether to use simple mode",
  "st.strictBehavior.description": "Behavior type of `strict`",
  "st.key.description": "Request parameter name",
  "st.separator.description": "Separator between attributes",
  "st.nameSeparator.description": "Column name and state separator",
  "st.arrayParam.description": "Whether to pass parameters as an array<br>`true` Indicates the use of `url?sort=name.asc&sort=age.desc`<br>`false` Indicates the use of `url?sort=name.asc-age.desc`",
  "st.keepEmptyKey.description": "Whether to keep send empty key<br>`true` send the `key` name anyway<br>`false` don't send `key` when not sorting",
  "st.global.description": "**Only global config**, Whether global multi sort mode<br>`true` all `st` defaults multi-sort<br>`false` all `st` non-multiple sorting, just only configurable for rule",
  "st.disabled.description": "Disable resize",
  "st.bounds.description": "Specifies resize boundaries",
  "st.maxWidth.description": "Maximum width of resizable elemen",
  "st.minWidth.description": "Minimum width of resizable element",
  "st.preview.description": "Enable preview when resizing",
  "sv-container.title": "View",
  "sv-container.whenToUse": "",
  "sv-container.description": "",
  "sv-container.sv-container.description": "specify the maximum number of columns to display, the final columns number is determined by col setting combined with [Responsive Rules](/theme/responsive)",
  "sv-container.col.description": "specify the maximum number of columns to display, the final columns number is determined by col setting combined with [Responsive Rules](/theme/responsive)",
  "sv-container.size.description": "size of view",
  "sv-container.layout.description": "type of layout",
  "sv-container.gutter.description": "specify the distance between two items, unit is `px`",
  "sv-container.labelWidth.description": "label text of width",
  "sv-container.default.description": "whether default text",
  "sv-container.title.description": "Display title",
  "sv-container.noColon.description": "Whether to not display : after label text",
  "sv-container.bordered.description": "Whether to display the border",
  "sv.title": "View",
  "sv.whenToUse": "",
  "sv.description": "",
  "sv.col.description": "specify the maximum number of columns to display, the final columns number is determined by col setting combined with [Responsive Rules](/theme/responsive)",
  "sv.label.description": "label of view",
  "sv.unit.description": "unit of view",
  "sv.default.description": "whether default text, inherit `sv-container`",
  "sv.type.description": "type of view",
  "sv.optional.description": "Label optional information",
  "sv.optionalHelp.description": "Label optional help",
  "sv.optionalHelpColor.description": "The background color of label optional help",
  "sv.noColon.description": "Whether to not display : after label text",
  "sv.hideLabel.description": "Whether to hide the current label",
  "sv-title.title": "View",
  "sv-title.whenToUse": "",
  "sv-title.description": "Display title.",
  "sv-title.prefix.description": "Prefix of value",
  "sv-title.unit.description": "Unit of value",
  "sv-title.tooltip.description": "Tooltip text of value",
  "sv-title.size.description": "Size of value",
  "sv-value.title": "View",
  "sv-value.whenToUse": "",
  "sv-value.description": "值展示。",
  "sv-value.prefix.description": "Prefix of value",
  "sv-value.unit.description": "Unit of value",
  "sv-value.tooltip.description": "Tooltip text of value",
  "sv-value.size.description": "Size of value",
  "tag-select.title": "Tag Select",
  "tag-select.whenToUse": "",
  "tag-select.description": "",
  "tag-select.expandable.description": "Whether to enabled",
  "tag-select.change.description": "Callback",
  "xlsx.title": "Excel",
  "xlsx.whenToUse": "",
  "xlsx.description": "xlsx directive.",
  "g2-bar.title": "柱状图",
  "g2-bar.whenToUse": "",
  "g2-bar.description": "",
  "g2-bar.repaint.description": "数据再次变更时是否重绘",
  "g2-bar.delay.description": "延迟渲染，单位：毫秒",
  "g2-bar.title.description": "图表标题",
  "g2-bar.color.description": "图表颜色",
  "g2-bar.padding.description": "图表内部间距",
  "g2-bar.height.description": "图表高度",
  "g2-bar.data.description": "数据",
  "g2-bar.autoLabel.description": "在宽度不足时，自动隐藏 x 轴的 label",
  "g2-bar.interaction.description": "交互类型，none 无 element-active 图形元素，active-region 图表组件，brush 框选，drag-move 移动",
  "g2-bar.theme.description": "定制图表主题",
  "g2-bar.clickItem.description": "点击项回调",
  "g2-bar.ready.description": "当G2完成初始化后调用",
  "g2-card.title": "图表卡片",
  "g2-card.whenToUse": "",
  "g2-card.description": "",
  "g2-card.title.description": "卡片标题",
  "g2-card.avatar.description": "头像",
  "g2-card.action.description": "卡片操作",
  "g2-card.total.description": "数据总量（支持HTML）",
  "g2-card.footer.description": "卡片底部",
  "g2-card.contentHeight.description": "内容区域高度（单位：`px`）",
  "g2-card.bordered.description": "是否显示边框",
  "chart-echarts.title": "ECharts",
  "chart-echarts.whenToUse": "",
  "chart-echarts.description": "",
  "chart-echarts.width.description": "图表宽度",
  "chart-echarts.height.description": "图表高度",
  "chart-echarts.option.description": "[配置项](https://echarts.apache.org/zh/option.html#title)",
  "chart-echarts.theme.description": "[主题](https://echarts.apache.org/zh/theme-builder.html)配置",
  "chart-echarts.on.description": "等同于 ECharts [on](https://echarts.apache.org/zh/api.html#echartsInstance.on)",
  "chart-echarts.events.description": "事件回调",
  "g2-custom.title": "Custom Chart",
  "g2-custom.whenToUse": "",
  "g2-custom.description": "",
  "g2-custom.delay.description": "Delayed rendering, unit: ms",
  "g2-custom.height.description": "Height of chart container",
  "g2-custom.resizeTime.description": "Resize event debounce time",
  "g2-custom.render.description": "Render event",
  "g2-custom.resize.description": "Resize event",
  "g2-custom.destroy.description": "Destroy event",
  "g2-custom.theme.description": "Custom chart theme",
  "g2-gauge.title": "仪表盘",
  "g2-gauge.whenToUse": "",
  "g2-gauge.description": "",
  "g2-gauge.repaint.description": "数据再次变更时是否重绘",
  "g2-gauge.delay.description": "延迟渲染，单位：毫秒",
  "g2-gauge.title.description": "图表标题",
  "g2-gauge.height.description": "图表高度",
  "g2-gauge.color.description": "图表颜色",
  "g2-gauge.bgColor.description": "图表背景色",
  "g2-gauge.percent.description": "进度比例",
  "g2-gauge.padding.description": "内边距",
  "g2-gauge.format.description": "坐标轴格式",
  "g2-gauge.theme.description": "定制图表主题",
  "g2-gauge.ready.description": "当G2完成初始化后调用",
  "g2-mini-area.title": "迷你区域图",
  "g2-mini-area.whenToUse": "",
  "g2-mini-area.description": "",
  "g2-mini-area.repaint.description": "数据再次变更时是否重绘",
  "g2-mini-area.delay.description": "延迟渲染，单位：毫秒",
  "g2-mini-area.color.description": "图表颜色",
  "g2-mini-area.borderColor.description": "图表边颜色",
  "g2-mini-area.height.description": "图表高度",
  "g2-mini-area.line.description": "是否显示描边",
  "g2-mini-area.animate.description": "是否显示动画",
  "g2-mini-area.padding.description": "图表内部间距",
  "g2-mini-area.xAxis.description": "[x 轴配置](https://www.yuque.com/antv/g2-docs/api-chart#ef1eaedc)",
  "g2-mini-area.yAxis.description": "[y 轴配置](https://www.yuque.com/antv/g2-docs/api-chart#ef1eaedc)",
  "g2-mini-area.yTooltipSuffix.description": "y 轴Tooltip后缀，一般指定单位",
  "g2-mini-area.tooltipType.description": "Tooltip显示类型",
  "g2-mini-area.data.description": "数据",
  "g2-mini-area.theme.description": "定制图表主题",
  "g2-mini-area.clickItem.description": "点击项回调",
  "g2-mini-area.ready.description": "当G2完成初始化后调用",
  "g2-mini-bar.title": "迷你柱状图",
  "g2-mini-bar.whenToUse": "",
  "g2-mini-bar.description": "",
  "g2-mini-bar.repaint.description": "数据再次变更时是否重绘",
  "g2-mini-bar.delay.description": "延迟渲染，单位：毫秒",
  "g2-mini-bar.color.description": "图表颜色",
  "g2-mini-bar.height.description": "图表高度",
  "g2-mini-bar.yTooltipSuffix.description": "y 轴Tooltip后缀，一般指定单位",
  "g2-mini-bar.tooltipType.description": "Tooltip显示类型",
  "g2-mini-bar.borderWidth.description": "线条粗细",
  "g2-mini-bar.padding.description": "图表内部间距",
  "g2-mini-bar.data.description": "数据",
  "g2-mini-bar.theme.description": "定制图表主题",
  "g2-mini-bar.clickItem.description": "点击项回调",
  "g2-mini-bar.ready.description": "当G2完成初始化后调用",
  "g2-mini-progress.title": "迷你进度条",
  "g2-mini-progress.whenToUse": "",
  "g2-mini-progress.description": "",
  "g2-mini-progress.target.description": "目标比例",
  "g2-mini-progress.color.description": "进度条颜色",
  "g2-mini-progress.strokeWidth.description": "进度条高度",
  "g2-mini-progress.percent.description": "进度比例",
  "number-info.title": "NumberInfo",
  "number-info.whenToUse": "",
  "number-info.description": "",
  "number-info.title.description": "title",
  "number-info.subTitle.description": "subtitle",
  "number-info.total.description": "total amount",
  "number-info.suffix.description": "total amount suffix",
  "number-info.subTotal.description": "total amount of additional information",
  "number-info.status.description": "increase state",
  "number-info.theme.description": "state style",
  "number-info.gap.description": "set the spacing (pixels) between numbers and descriptions",
  "g2-pie.title": "饼状图",
  "g2-pie.whenToUse": "",
  "g2-pie.description": "",
  "g2-pie.repaint.description": "数据再次变更时是否重绘",
  "g2-pie.delay.description": "延迟渲染，单位：毫秒",
  "g2-pie.animate.description": "是否显示动画",
  "g2-pie.color.description": "图表颜色",
  "g2-pie.height.description": "图表高度",
  "g2-pie.hasLegend.description": "是否显示 legend",
  "g2-pie.padding.description": "图表内部间距",
  "g2-pie.percent.description": "占比",
  "g2-pie.lineWidth.description": "边框粗细",
  "g2-pie.inner.description": "内部极坐标系的半径",
  "g2-pie.blockMaxWidth.description": "多少宽度为块显示",
  "g2-pie.tooltip.description": "是否显示 tooltip",
  "g2-pie.subTitle.description": "图表子标题",
  "g2-pie.total.description": "总量",
  "g2-pie.valueFormat.description": "y轴格式化",
  "g2-pie.data.description": "数据",
  "g2-pie.colors.description": "颜色列表",
  "g2-pie.interaction.description": "交互类型，none 无 element-active 图形元素，active-region 图表组件，brush 框选，drag-move 移动",
  "g2-pie.ratio.description": "百分比配置项",
  "g2-pie.theme.description": "定制图表主题",
  "g2-pie.clickItem.description": "点击项回调",
  "g2-pie.ready.description": "当G2完成初始化后调用",
  "g2-radar.title": "雷达图",
  "g2-radar.whenToUse": "",
  "g2-radar.description": "",
  "g2-radar.repaint.description": "数据再次变更时是否重绘",
  "g2-radar.delay.description": "延迟渲染，单位：毫秒",
  "g2-radar.title.description": "图表标题",
  "g2-radar.height.description": "图表高度",
  "g2-radar.hasLegend.description": "是否显示 legend",
  "g2-radar.padding.description": "图表内部间距",
  "g2-radar.colors.description": "颜色列表",
  "g2-radar.data.description": "数据",
  "g2-radar.theme.description": "定制图表主题",
  "g2-radar.clickItem.description": "点击项回调",
  "g2-radar.ready.description": "当G2完成初始化后调用",
  "g2-single-bar.title": "单一柱状图",
  "g2-single-bar.whenToUse": "",
  "g2-single-bar.description": "",
  "g2-single-bar.repaint.description": "数据再次变更时是否重绘",
  "g2-single-bar.delay.description": "延迟渲染，单位：毫秒",
  "g2-single-bar.plusColor.description": "图表颜色",
  "g2-single-bar.minusColor.description": "负值图表颜色",
  "g2-single-bar.height.description": "图表高度",
  "g2-single-bar.barSize.description": "柱状高度",
  "g2-single-bar.min.description": "最小值",
  "g2-single-bar.max.description": "最大值，若小于0表示显示负值",
  "g2-single-bar.padding.description": "图表内部间距",
  "g2-single-bar.value.description": "值",
  "g2-single-bar.format.description": "显示值格式",
  "g2-single-bar.textStyle.description": "显示值样式",
  "g2-single-bar.theme.description": "定制图表主题",
  "g2-single-bar.ready.description": "当G2完成初始化后调用",
  "g2-tag-cloud.title": "标签云",
  "g2-tag-cloud.whenToUse": "",
  "g2-tag-cloud.description": "",
  "g2-tag-cloud.repaint.description": "数据再次变更时是否重绘",
  "g2-tag-cloud.delay.description": "延迟渲染，单位：毫秒",
  "g2-tag-cloud.height.description": "高度值",
  "g2-tag-cloud.width.description": "宽度值，若不指定自动按宿主元素的宽度",
  "g2-tag-cloud.data.description": "数据",
  "g2-tag-cloud.theme.description": "定制图表主题",
  "g2-tag-cloud.clickItem.description": "点击项回调",
  "g2-tag-cloud.ready.description": "当G2完成初始化后调用",
  "g2-timeline.title": "折线图",
  "g2-timeline.whenToUse": "",
  "g2-timeline.description": "",
  "g2-timeline.repaint.description": "数据再次变更时是否重绘",
  "g2-timeline.delay.description": "延迟渲染，单位：毫秒",
  "g2-timeline.title.description": "图表标题",
  "g2-timeline.maxAxis.description": "最大指标数量",
  "g2-timeline.data.description": "数据，注：根据 `maxAxis` 值传递指标数据",
  "g2-timeline.titleMap.description": "指标别名",
  "g2-timeline.colorMap.description": "颜色",
  "g2-timeline.height.description": "高度值",
  "g2-timeline.padding.description": "图表内部间距",
  "g2-timeline.borderWidth.description": "线条",
  "g2-timeline.mask.description": "日期格式，使用 [G2 Mask日期格式](https://g2.antv.vision/zh/docs/manual/tutorial/scale#time)",
  "g2-timeline.maskSlider.description": "滑动条日期格式，使用 [date-fns 日期格式](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table)",
  "g2-timeline.position.description": "标题位置",
  "g2-timeline.slider.description": "是否需要滑动条",
  "g2-timeline.theme.description": "定制图表主题",
  "g2-timeline.clickItem.description": "点击项回调",
  "g2-timeline.ready.description": "当G2完成初始化后调用",
  "g2-timeline.y1.description": "指标1",
  "g2-timeline.y2.description": "指标2",
  "g2-timeline.y3.description": "指标3",
  "g2-timeline.y4.description": "指标4",
  "g2-timeline.y5.description": "指标5",
  "trend.title": "趋势标记",
  "trend.whenToUse": "",
  "trend.description": "",
  "trend.colorful.description": "是否彩色标记",
  "trend.flag.description": "上升下降标识",
  "trend.reverseColor.description": "颜色反转",
  "g2-water-wave.title": "水波图",
  "g2-water-wave.whenToUse": "",
  "g2-water-wave.description": "",
  "g2-water-wave.animate.description": "是否显示动画",
  "g2-water-wave.delay.description": "延迟渲染，单位：毫秒",
  "g2-water-wave.title.description": "图表标题",
  "g2-water-wave.height.description": "图表高度",
  "g2-water-wave.color.description": "图表颜色",
  "g2-water-wave.percent.description": "进度比例",
  "sf.title": "Getting Started",
  "sf.whenToUse": "",
  "sf.description": "",
  "sf.layout.description": "layout of the form",
  "sf.schema.description": "**Required** JSON Schema",
  "sf.ui.description": "UI Schema",
  "sf.formData.description": "Default form values",
  "sf.mode.description": "Form type mode",
  "sf.button.description": "Submit button of the form",
  "sf.firstVisual.description": "Whether to show visual error immediately",
  "sf.liveValidate.description": "Whether to live validate",
  "sf.autocomplete.description": "autocomplete value of this form",
  "sf.disabled.description": "Whether to disabled status",
  "sf.loading.description": "Whether to load status，when `true` reset button is disabled status, submit button is loading status",
  "sf.noColon.description": "Whether to not display `:` after label text.",
  "sf.compact.description": "Whether compact style",
  "sf.cleanValue.description": "Whether to clean up data for undefined Schema",
  "sf.delay.description": "Whether to delay rendering, should be manually call `refreshSchema()`",
  "sf.formChange.description": "Callback when data changes",
  "sf.formValueChange.description": "Callback when value changes",
  "sf.formSubmit.description": "Callback when submitting the form",
  "sf.formReset.description": "Callback when resetting the form",
  "sf.formError.description": "Callback when form check",
  "sf.submit.description": "Submit text of button",
  "sf.reset.description": "Reset text of button",
  "sf.search.description": "Search text of button",
  "sf.edit.description": "Edit text of button",
  "sf.render.description": "Button layout",
  "nz-breadcrumb-item.title": "Breadcrumb",
  "nz-breadcrumb-item.whenToUse": "- When the system has more than two layers in a hierarchy.\n- When you need to inform the user of where they are.\n- When the user may need to navigate back to a higher level.\n- When the application has multi-layer architecture.",
  "nz-breadcrumb-item.description": "",
  "nz-layout.description": "The layout wrapper, in which `nz-header` `nz-sider` `nz-content` `nz-footer` or `nz-layout` itself can be nested, and can be placed in any parent container.",
  "nz-header.description": "The top layout with default style, in which any element can be nested, and must be placed in `nz-layout`.",
  "nz-content.description": "The content layout with default style, in which any element can be nested, and must be placed in `nz-layout`.",
  "nz-footer.description": "The bottom layout with default style, in which any element can be nested, and must be placed in `nz-layout`."
};